{"ast":null,"code":"// // import { Button, Paper, Stack, Typography } from \"@mui/material\";\n// import { ethers } from \"ethers\";\n// import { useEffect, useState } from \"react\";\n\n// const connectWallet = () => {\n//   const [errorMessage, setErrorMessage] = useState(null);\n//   const [account, setAccount] = useState(null);\n//   const [balance, setBalance] = useState(null);\n\n//   useEffect(() => {\n//     if (window.ethereum) {\n//       window.ethereum.on(\"accountChanged\", accountChanged);\n//       window.ethereum.on(\"chainChanged\", chainChanged);\n//     }\n//   }, []);\n\n//   const connectHandler = async () => {\n//     if (window.ethereum) {\n//       try {\n//         const res = await window.ethereum.request({\n//           method: \"eth_requestAccounts\",\n//         });\n//         await accountChanged(res[0]);\n//       } catch (err) {\n//         console.error(err);\n//         setErrorMessage(\"There was a problem connecting to MetaMask\");\n//       }\n//     } else {\n//       setErrorMessage(\"Install MetaMask\");\n//     }\n//   };\n\n//   const accountChanged = async (newAccount) => {\n//     setAccount(newAccount);\n//     try {\n//       const balance = await window.ethereum.request({\n//         method: \"eth_getBalance\",\n//         params: [newAccount.toString(), \"latest\"],\n//       });\n//       setBalance(ethers.utils.formatEther(balance));\n//     } catch (err) {\n//       console.error(err);\n//       setErrorMessage(\"There was a problem connecting to MetaMask\");\n//     }\n//   };\n\n//   const chainChanged = () => {\n//     setErrorMessage(null);\n//     setAccount(null);\n//     setBalance(null);\n//   };\n\n//   return (\n//     <div>\n//       <h1>Wallet Connection</h1>\n\n//       <button onClick={connectHandler}>Connect Wallet</button>\n//       <h3>Account: {account}</h3>\n//       <h3>Balance: {balance}</h3>\n\n//     </div>\n//     // <Paper elevation={3} sx={{ p: 3 }}>\n//     //   <Stack spacing={2}>\n//     //     <Typography variant=\"h6\"> Account: {account} </Typography>\n//     //     <Typography variant=\"h6\">\n//     //       Balance: {balance} {balance ? \"ETH\" : null}\n//     //     </Typography>\n//     //     <Button onClick={connectHandler}>Connect Account</Button>\n//     //     {errorMessage ? (\n//     //       <Typography variant=\"body1\" color=\"red\">\n//     //         Error: {errorMessage}\n//     //       </Typography>\n//     //     ) : null}\n//     //   </Stack>\n//     // </Paper>\n//   );\n// };\n\n// export default connectWallet;","map":{"version":3,"names":[],"sources":["/Users/h-02/Desktop/app/whitelistDapp/client/src/components/connectWallet.js"],"sourcesContent":["// // import { Button, Paper, Stack, Typography } from \"@mui/material\";\n// import { ethers } from \"ethers\";\n// import { useEffect, useState } from \"react\";\n\n// const connectWallet = () => {\n//   const [errorMessage, setErrorMessage] = useState(null);\n//   const [account, setAccount] = useState(null);\n//   const [balance, setBalance] = useState(null);\n\n//   useEffect(() => {\n//     if (window.ethereum) {\n//       window.ethereum.on(\"accountChanged\", accountChanged);\n//       window.ethereum.on(\"chainChanged\", chainChanged);\n//     }\n//   }, []);\n\n//   const connectHandler = async () => {\n//     if (window.ethereum) {\n//       try {\n//         const res = await window.ethereum.request({\n//           method: \"eth_requestAccounts\",\n//         });\n//         await accountChanged(res[0]);\n//       } catch (err) {\n//         console.error(err);\n//         setErrorMessage(\"There was a problem connecting to MetaMask\");\n//       }\n//     } else {\n//       setErrorMessage(\"Install MetaMask\");\n//     }\n//   };\n\n//   const accountChanged = async (newAccount) => {\n//     setAccount(newAccount);\n//     try {\n//       const balance = await window.ethereum.request({\n//         method: \"eth_getBalance\",\n//         params: [newAccount.toString(), \"latest\"],\n//       });\n//       setBalance(ethers.utils.formatEther(balance));\n//     } catch (err) {\n//       console.error(err);\n//       setErrorMessage(\"There was a problem connecting to MetaMask\");\n//     }\n//   };\n\n//   const chainChanged = () => {\n//     setErrorMessage(null);\n//     setAccount(null);\n//     setBalance(null);\n//   };\n\n//   return (\n//     <div>\n//       <h1>Wallet Connection</h1>\n\n//       <button onClick={connectHandler}>Connect Wallet</button>\n//       <h3>Account: {account}</h3>\n//       <h3>Balance: {balance}</h3>\n\n//     </div>\n//     // <Paper elevation={3} sx={{ p: 3 }}>\n//     //   <Stack spacing={2}>\n//     //     <Typography variant=\"h6\"> Account: {account} </Typography>\n//     //     <Typography variant=\"h6\">\n//     //       Balance: {balance} {balance ? \"ETH\" : null}\n//     //     </Typography>\n//     //     <Button onClick={connectHandler}>Connect Account</Button>\n//     //     {errorMessage ? (\n//     //       <Typography variant=\"body1\" color=\"red\">\n//     //         Error: {errorMessage}\n//     //       </Typography>\n//     //     ) : null}\n//     //   </Stack>\n//     // </Paper>\n//   );\n// };\n\n// export default connectWallet;"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}