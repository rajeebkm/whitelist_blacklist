{"ast":null,"code":"var _jsxFileName = \"/Users/h-02/Desktop/app/whitelistDapp/client/src/App.js\",\n  _s = $RefreshSig$();\nimport abi from \"./contract/chai.json\";\nimport { Button, Paper, Stack, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport Buy from \"./components/Buy\";\n// import { Button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Card from \"react-bootstrap/Card\";\nimport ReactDOM from \"react-dom\";\n// import Memos from \"./components/Memos\";\nimport Whitelist from \"./components/Whitelist\";\nimport Blacklist from \"./components/Blacklist\";\nimport PurchaseToken from \"./components/PurchaseToken\";\nimport connectWallet from \"./components/connectWallet\";\n// import chai from \"./chai.png\";\nimport banner from \"./banner.jpeg\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [state, setState] = useState({\n    provider: null,\n    signer: null,\n    contract: null\n  });\n  // const [account, setAccount] = useState(\"None\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [balance, setBalance] = useState(null);\n  useEffect(() => {\n    const connectWallet = () => {\n      // const [errorMessage, setErrorMessage] = useState(null);\n      // const [account, setAccount] = useState(null);\n      // const [balance, setBalance] = useState(null);\n\n      // useEffect(() => {\n      //   if (window.ethereum) {\n      //     window.ethereum.on(\"accountChanged\", accountChanged);\n      //     window.ethereum.on(\"chainChanged\", chainChanged);\n      //   }\n      // }, []);\n\n      const connectHandler = async () => {\n        if (window.ethereum) {\n          try {\n            const res = await window.ethereum.request({\n              method: \"eth_requestAccounts\"\n            });\n            await accountChanged(res[0]);\n          } catch (err) {\n            console.error(err);\n            setErrorMessage(\"There was a problem connecting to MetaMask\");\n          }\n        } else {\n          setErrorMessage(\"Install MetaMask\");\n        }\n      };\n      const accountChanged = async newAccount => {\n        setAccount(newAccount);\n        try {\n          const balance = await window.ethereum.request({\n            method: \"eth_getBalance\",\n            params: [newAccount.toString(), \"latest\"]\n          });\n          setBalance(ethers.utils.formatEther(balance));\n        } catch (err) {\n          console.error(err);\n          setErrorMessage(\"There was a problem connecting to MetaMask\");\n        }\n      };\n      const chainChanged = () => {\n        setErrorMessage(null);\n        setAccount(null);\n        setBalance(null);\n      };\n      // const connectWallet = async () => {\n      //   const contractAddress = \"0x46436dcb1b29b111a00bb61f5475b420ef1104eb\";\n      //   const contractABI = abi.abi;\n      //   try {\n      //     const { ethereum } = window;\n\n      //     if (ethereum) {\n      //       const account = await ethereum.request({\n      //         method: \"eth_requestAccounts\",\n      //       });\n\n      //       window.ethereum.on(\"chainChanged\", () => {\n      //         window.location.reload();\n      //       });\n\n      //       window.ethereum.on(\"accountsChanged\", () => {\n      //         window.location.reload();\n      //       });\n\n      //       const provider = new ethers.providers.Web3Provider(ethereum);\n      //       const signer = provider.getSigner();\n      //       const contract = new ethers.Contract(\n      //         contractAddress,\n      //         contractABI,\n      //         signer\n      //       );\n      //       setAccount(account);\n      //       setState({ provider, signer, contract });\n      //     } else {\n      //       alert(\"Please install metamask\");\n      //     }\n      //   } catch (error) {\n      //     console.log(error);\n      //   }\n    };\n\n    connectWallet();\n  }, []);\n  // console.log(state);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#EFEFEF\",\n      height: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: banner,\n      className: \"img-fluid\",\n      alt: \"..\",\n      width: \"100%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Whitelist, {\n        state: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        marginTop: \"45px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Blacklist, {\n        state: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tu+UEuF0j8IDoGLaDe5yRme9WYk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["abi","Button","Paper","Stack","Typography","React","useEffect","useState","ethers","Buy","Card","ReactDOM","Whitelist","Blacklist","PurchaseToken","connectWallet","banner","App","state","setState","provider","signer","contract","errorMessage","setErrorMessage","account","setAccount","balance","setBalance","connectHandler","window","ethereum","res","request","method","accountChanged","err","console","error","newAccount","params","toString","utils","formatEther","chainChanged","backgroundColor","height","marginTop"],"sources":["/Users/h-02/Desktop/app/whitelistDapp/client/src/App.js"],"sourcesContent":["import abi from \"./contract/chai.json\";\nimport { Button, Paper, Stack, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport Buy from \"./components/Buy\";\n// import { Button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Card from \"react-bootstrap/Card\";\nimport ReactDOM from \"react-dom\";\n// import Memos from \"./components/Memos\";\nimport Whitelist from \"./components/Whitelist\";\nimport Blacklist from \"./components/Blacklist\";\nimport PurchaseToken from \"./components/PurchaseToken\";\nimport connectWallet from \"./components/connectWallet\";\n// import chai from \"./chai.png\";\nimport banner from \"./banner.jpeg\";\nimport \"./App.css\";\n\nfunction App() {\n  const [state, setState] = useState({\n    provider: null,\n    signer: null,\n    contract: null,\n  });\n  // const [account, setAccount] = useState(\"None\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [balance, setBalance] = useState(null);\n  useEffect(() => {\n      const connectWallet = () => {\n  // const [errorMessage, setErrorMessage] = useState(null);\n  // const [account, setAccount] = useState(null);\n  // const [balance, setBalance] = useState(null);\n\n  // useEffect(() => {\n  //   if (window.ethereum) {\n  //     window.ethereum.on(\"accountChanged\", accountChanged);\n  //     window.ethereum.on(\"chainChanged\", chainChanged);\n  //   }\n  // }, []);\n\n  const connectHandler = async () => {\n    if (window.ethereum) {\n      try {\n        const res = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        await accountChanged(res[0]);\n      } catch (err) {\n        console.error(err);\n        setErrorMessage(\"There was a problem connecting to MetaMask\");\n      }\n    } else {\n      setErrorMessage(\"Install MetaMask\");\n    }\n  };\n\n  const accountChanged = async (newAccount) => {\n    setAccount(newAccount);\n    try {\n      const balance = await window.ethereum.request({\n        method: \"eth_getBalance\",\n        params: [newAccount.toString(), \"latest\"],\n      });\n      setBalance(ethers.utils.formatEther(balance));\n    } catch (err) {\n      console.error(err);\n      setErrorMessage(\"There was a problem connecting to MetaMask\");\n    }\n  };\n\n  const chainChanged = () => {\n    setErrorMessage(null);\n    setAccount(null);\n    setBalance(null);\n  };\n  // const connectWallet = async () => {\n  //   const contractAddress = \"0x46436dcb1b29b111a00bb61f5475b420ef1104eb\";\n  //   const contractABI = abi.abi;\n  //   try {\n  //     const { ethereum } = window;\n\n  //     if (ethereum) {\n  //       const account = await ethereum.request({\n  //         method: \"eth_requestAccounts\",\n  //       });\n\n  //       window.ethereum.on(\"chainChanged\", () => {\n  //         window.location.reload();\n  //       });\n\n  //       window.ethereum.on(\"accountsChanged\", () => {\n  //         window.location.reload();\n  //       });\n\n  //       const provider = new ethers.providers.Web3Provider(ethereum);\n  //       const signer = provider.getSigner();\n  //       const contract = new ethers.Contract(\n  //         contractAddress,\n  //         contractABI,\n  //         signer\n  //       );\n  //       setAccount(account);\n  //       setState({ provider, signer, contract });\n  //     } else {\n  //       alert(\"Please install metamask\");\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  };\n  connectWallet();\n  }, []);\n  // console.log(state);\n  return (\n    <div style={{ backgroundColor: \"#EFEFEF\", height: \"100%\" }}>\n      {/* <div className=\"container\" style={{ marginTop: \"45px\" }}>\n        <connectWallet state={state} />\n      </div> */}\n      <img src={banner} className=\"img-fluid\" alt=\"..\" width=\"100%\" />\n      {/* <p\n        class=\"text-muted lead \"\n        style={{ marginTop: \"10px\", marginLeft: \"5px\" }}\n      >\n        <small>Connected Account - {account}</small>\n      </p> */}\n      <div className=\"container\">\n        <Whitelist state={state} />\n      </div>\n      <div className=\"container\" style={{ marginTop: \"45px\" }}>\n        <Blacklist state={state} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}