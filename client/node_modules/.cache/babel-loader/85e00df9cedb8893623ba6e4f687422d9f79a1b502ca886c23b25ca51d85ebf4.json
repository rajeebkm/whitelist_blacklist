{"ast":null,"code":"var _jsxFileName = \"/Users/h-02/Desktop/app/whitelistDapp/client/src/App.js\",\n  _s = $RefreshSig$();\nimport abi from \"./contract/chai.json\";\nimport { Button, Paper, Stack, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport Buy from \"./components/Buy\";\n// import { Button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Card from \"react-bootstrap/Card\";\nimport ReactDOM from \"react-dom\";\n// import Memos from \"./components/Memos\";\nimport Whitelist from \"./components/Whitelist\";\nimport Blacklist from \"./components/Blacklist\";\nimport PurchaseToken from \"./components/PurchaseToken\";\nimport connectWallet from \"./components/connectWallet\";\n// import chai from \"./chai.png\";\nimport banner from \"./banner.jpeg\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [state, setState] = useState({\n    provider: null,\n    signer: null,\n    contract: null\n  });\n  const [account, setAccount] = useState(\"None\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [balance, setBalance] = useState(null);\n  useEffect(() => {\n    // const connectWallet = () => {\n    // const [errorMessage, setErrorMessage] = useState(null);\n    // const [account, setAccount] = useState(null);\n    // const [balance, setBalance] = useState(null);\n\n    // useEffect(() => {\n    //   if (window.ethereum) {\n    //     window.ethereum.on(\"accountChanged\", accountChanged);\n    //     window.ethereum.on(\"chainChanged\", chainChanged);\n    //   }\n    // }, []);\n\n    const connectWallet = async () => {\n      const contractAddress = \"0x46436dcb1b29b111a00bb61f5475b420ef1104eb\";\n      const contractABI = abi.abi;\n      if (window.ethereum) {\n        try {\n          const res = await window.ethereum.request({\n            method: \"eth_requestAccounts\"\n          });\n          await accountChanged(res[0]);\n          window.ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          window.ethereum.on(\"accountsChanged\", () => {\n            window.location.reload();\n          });\n          const provider = new ethers.providers.Web3Provider(window.ethereum);\n          const signer = provider.getSigner();\n          const contract = new ethers.Contract(contractAddress, contractABI, signer);\n          //       setAccount(account);\n          setState({\n            provider,\n            signer,\n            contract\n          });\n        } catch (err) {\n          console.error(err);\n          setErrorMessage(\"There was a problem connecting to MetaMask\");\n        }\n      } else {\n        setErrorMessage(\"Install MetaMask\");\n      }\n    };\n    const accountChanged = async newAccount => {\n      setAccount(newAccount);\n      try {\n        const balance = await window.ethereum.request({\n          method: \"eth_getBalance\",\n          params: [newAccount.toString(), \"latest\"]\n        });\n        setBalance(ethers.utils.formatEther(balance));\n      } catch (err) {\n        console.error(err);\n        setErrorMessage(\"There was a problem connecting to MetaMask\");\n      }\n    };\n    const chainChanged = () => {\n      setErrorMessage(null);\n      setAccount(null);\n      setBalance(null);\n    };\n    // const connectWallet = async () => {\n    // const contractAddress = \"0x46436dcb1b29b111a00bb61f5475b420ef1104eb\";\n    // const contractABI = abi.abi;\n    //   try {\n    //     const { ethereum } = window;\n\n    //     if (ethereum) {\n    //       const account = await ethereum.request({\n    //         method: \"eth_requestAccounts\",\n    //       });\n\n    //       window.ethereum.on(\"chainChanged\", () => {\n    //         window.location.reload();\n    //       });\n\n    //       window.ethereum.on(\"accountsChanged\", () => {\n    //         window.location.reload();\n    //       });\n\n    //       const provider = new ethers.providers.Web3Provider(ethereum);\n    //       const signer = provider.getSigner();\n    //       const contract = new ethers.Contract(\n    //         contractAddress,\n    //         contractABI,\n    //         signer\n    //       );\n    // //       setAccount(account);\n    //       setState({ provider, signer, contract });\n    //     } else {\n    //       alert(\"Please install metamask\");\n    //     }\n    //   } catch (error) {\n    //     console.log(error);\n    //   }\n    // };\n    // connectWallet();\n    // connectHandler();\n  }, []);\n  // console.log(state);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#EFEFEF\",\n      height: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: banner,\n      className: \"img-fluid\",\n      alt: \"..\",\n      width: \"100%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      class: \"text-muted lead \",\n      style: {\n        marginTop: \"10px\",\n        marginLeft: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Connected Account - \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Whitelist, {\n        state: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        marginTop: \"45px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Blacklist, {\n        state: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BnYHWSf48lhnfvvlwNGU3QhoJAo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["abi","Button","Paper","Stack","Typography","React","useEffect","useState","ethers","Buy","Card","ReactDOM","Whitelist","Blacklist","PurchaseToken","connectWallet","banner","App","state","setState","provider","signer","contract","account","setAccount","errorMessage","setErrorMessage","balance","setBalance","contractAddress","contractABI","window","ethereum","res","request","method","accountChanged","on","location","reload","providers","Web3Provider","getSigner","Contract","err","console","error","newAccount","params","toString","utils","formatEther","chainChanged","backgroundColor","height","marginTop","marginLeft"],"sources":["/Users/h-02/Desktop/app/whitelistDapp/client/src/App.js"],"sourcesContent":["import abi from \"./contract/chai.json\";\nimport { Button, Paper, Stack, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport Buy from \"./components/Buy\";\n// import { Button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Card from \"react-bootstrap/Card\";\nimport ReactDOM from \"react-dom\";\n// import Memos from \"./components/Memos\";\nimport Whitelist from \"./components/Whitelist\";\nimport Blacklist from \"./components/Blacklist\";\nimport PurchaseToken from \"./components/PurchaseToken\";\nimport connectWallet from \"./components/connectWallet\";\n// import chai from \"./chai.png\";\nimport banner from \"./banner.jpeg\";\nimport \"./App.css\";\n\nfunction App() {\n  const [state, setState] = useState({\n    provider: null,\n    signer: null,\n    contract: null,\n  });\n  const [account, setAccount] = useState(\"None\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [balance, setBalance] = useState(null);\n  useEffect(() => {\n    // const connectWallet = () => {\n      // const [errorMessage, setErrorMessage] = useState(null);\n      // const [account, setAccount] = useState(null);\n      // const [balance, setBalance] = useState(null);\n\n      // useEffect(() => {\n      //   if (window.ethereum) {\n      //     window.ethereum.on(\"accountChanged\", accountChanged);\n      //     window.ethereum.on(\"chainChanged\", chainChanged);\n      //   }\n      // }, []);\n\n      const connectWallet = async () => {\n         const contractAddress = \"0x46436dcb1b29b111a00bb61f5475b420ef1104eb\";\n         const contractABI = abi.abi;\n        if (window.ethereum) {\n          try {\n            const res = await window.ethereum.request({\n              method: \"eth_requestAccounts\",\n            });\n            await accountChanged(res[0]);\n\n            window.ethereum.on(\"chainChanged\", () => {\n              window.location.reload();\n            });\n\n            window.ethereum.on(\"accountsChanged\", () => {\n              window.location.reload();\n            });\n\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\n            const signer = provider.getSigner();\n            const contract = new ethers.Contract(\n              contractAddress,\n              contractABI,\n              signer\n            );\n            //       setAccount(account);\n            setState({ provider, signer, contract });\n          } catch (err) {\n            console.error(err);\n            setErrorMessage(\"There was a problem connecting to MetaMask\");\n          }\n        } else {\n          setErrorMessage(\"Install MetaMask\");\n        }\n      };\n\n      const accountChanged = async (newAccount) => {\n        setAccount(newAccount);\n        try {\n          const balance = await window.ethereum.request({\n            method: \"eth_getBalance\",\n            params: [newAccount.toString(), \"latest\"],\n          });\n          setBalance(ethers.utils.formatEther(balance));\n        } catch (err) {\n          console.error(err);\n          setErrorMessage(\"There was a problem connecting to MetaMask\");\n        }\n      };\n\n      const chainChanged = () => {\n        setErrorMessage(null);\n        setAccount(null);\n        setBalance(null);\n      };\n      // const connectWallet = async () => {\n      // const contractAddress = \"0x46436dcb1b29b111a00bb61f5475b420ef1104eb\";\n      // const contractABI = abi.abi;\n      //   try {\n      //     const { ethereum } = window;\n\n      //     if (ethereum) {\n      //       const account = await ethereum.request({\n      //         method: \"eth_requestAccounts\",\n      //       });\n\n      //       window.ethereum.on(\"chainChanged\", () => {\n      //         window.location.reload();\n      //       });\n\n      //       window.ethereum.on(\"accountsChanged\", () => {\n      //         window.location.reload();\n      //       });\n\n      //       const provider = new ethers.providers.Web3Provider(ethereum);\n      //       const signer = provider.getSigner();\n      //       const contract = new ethers.Contract(\n      //         contractAddress,\n      //         contractABI,\n      //         signer\n      //       );\n      // //       setAccount(account);\n      //       setState({ provider, signer, contract });\n      //     } else {\n      //       alert(\"Please install metamask\");\n      //     }\n      //   } catch (error) {\n      //     console.log(error);\n      //   }\n    // };\n    // connectWallet();\n    // connectHandler();\n  }, []);\n  // console.log(state);\n  return (\n    <div style={{ backgroundColor: \"#EFEFEF\", height: \"100%\" }}>\n      {/* <div className=\"container\" style={{ marginTop: \"45px\" }}>\n        <connectWallet state={state} />\n      </div> */}\n      <img src={banner} className=\"img-fluid\" alt=\"..\" width=\"100%\" />\n      <p\n        class=\"text-muted lead \"\n        style={{ marginTop: \"10px\", marginLeft: \"5px\" }}\n      >\n        <small>Connected Account - {account}</small>\n      </p>\n      <div className=\"container\">\n        <Whitelist state={state} />\n      </div>\n      <div className=\"container\" style={{ marginTop: \"45px\" }}>\n        <Blacklist state={state} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,GAAG,MAAM,sBAAsB;AACtC,SAASC,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAEC,UAAU,QAAQ,eAAe;AAChE,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,GAAG,MAAM,kBAAkB;AAClC;AACA,OAAO,sCAAsC;AAC7C,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,QAAQ,MAAM,WAAW;AAChC;AACA,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,aAAa,MAAM,4BAA4B;AACtD;AACA,OAAOC,MAAM,MAAM,eAAe;AAClC,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC;IACjCa,QAAQ,EAAE,IAAI;IACdC,MAAM,EAAE,IAAI;IACZC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,MAAM,CAAC;EAC9C,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAC5CD,SAAS,CAAC,MAAM;IACd;IACE;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;;IAEA,MAAMS,aAAa,GAAG,YAAY;MAC/B,MAAMc,eAAe,GAAG,4CAA4C;MACpE,MAAMC,WAAW,GAAG9B,GAAG,CAACA,GAAG;MAC5B,IAAI+B,MAAM,CAACC,QAAQ,EAAE;QACnB,IAAI;UACF,MAAMC,GAAG,GAAG,MAAMF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;YACxCC,MAAM,EAAE;UACV,CAAC,CAAC;UACF,MAAMC,cAAc,CAACH,GAAG,CAAC,CAAC,CAAC,CAAC;UAE5BF,MAAM,CAACC,QAAQ,CAACK,EAAE,CAAC,cAAc,EAAE,MAAM;YACvCN,MAAM,CAACO,QAAQ,CAACC,MAAM,EAAE;UAC1B,CAAC,CAAC;UAEFR,MAAM,CAACC,QAAQ,CAACK,EAAE,CAAC,iBAAiB,EAAE,MAAM;YAC1CN,MAAM,CAACO,QAAQ,CAACC,MAAM,EAAE;UAC1B,CAAC,CAAC;UAEF,MAAMnB,QAAQ,GAAG,IAAIZ,MAAM,CAACgC,SAAS,CAACC,YAAY,CAACV,MAAM,CAACC,QAAQ,CAAC;UACnE,MAAMX,MAAM,GAAGD,QAAQ,CAACsB,SAAS,EAAE;UACnC,MAAMpB,QAAQ,GAAG,IAAId,MAAM,CAACmC,QAAQ,CAClCd,eAAe,EACfC,WAAW,EACXT,MAAM,CACP;UACD;UACAF,QAAQ,CAAC;YAAEC,QAAQ;YAAEC,MAAM;YAAEC;UAAS,CAAC,CAAC;QAC1C,CAAC,CAAC,OAAOsB,GAAG,EAAE;UACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;UAClBlB,eAAe,CAAC,4CAA4C,CAAC;QAC/D;MACF,CAAC,MAAM;QACLA,eAAe,CAAC,kBAAkB,CAAC;MACrC;IACF,CAAC;IAED,MAAMU,cAAc,GAAG,MAAOW,UAAU,IAAK;MAC3CvB,UAAU,CAACuB,UAAU,CAAC;MACtB,IAAI;QACF,MAAMpB,OAAO,GAAG,MAAMI,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;UAC5CC,MAAM,EAAE,gBAAgB;UACxBa,MAAM,EAAE,CAACD,UAAU,CAACE,QAAQ,EAAE,EAAE,QAAQ;QAC1C,CAAC,CAAC;QACFrB,UAAU,CAACpB,MAAM,CAAC0C,KAAK,CAACC,WAAW,CAACxB,OAAO,CAAC,CAAC;MAC/C,CAAC,CAAC,OAAOiB,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;QAClBlB,eAAe,CAAC,4CAA4C,CAAC;MAC/D;IACF,CAAC;IAED,MAAM0B,YAAY,GAAG,MAAM;MACzB1B,eAAe,CAAC,IAAI,CAAC;MACrBF,UAAU,CAAC,IAAI,CAAC;MAChBI,UAAU,CAAC,IAAI,CAAC;IAClB,CAAC;IACD;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;IACA;;IAEA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACF;IACA;IACA;EACF,CAAC,EAAE,EAAE,CAAC;EACN;EACA,oBACE;IAAK,KAAK,EAAE;MAAEyB,eAAe,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAA,wBAIzD;MAAK,GAAG,EAAEtC,MAAO;MAAC,SAAS,EAAC,WAAW;MAAC,GAAG,EAAC,IAAI;MAAC,KAAK,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eAChE;MACE,KAAK,EAAC,kBAAkB;MACxB,KAAK,EAAE;QAAEuC,SAAS,EAAE,MAAM;QAAEC,UAAU,EAAE;MAAM,CAAE;MAAA,uBAEhD;QAAA,mCAA4BjC,OAAO;MAAA;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QAC1C,eACJ;MAAK,SAAS,EAAC,WAAW;MAAA,uBACxB,QAAC,SAAS;QAAC,KAAK,EAAEL;MAAM;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACvB,eACN;MAAK,SAAS,EAAC,WAAW;MAAC,KAAK,EAAE;QAAEqC,SAAS,EAAE;MAAO,CAAE;MAAA,uBACtD,QAAC,SAAS;QAAC,KAAK,EAAErC;MAAM;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACvB;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAxIQD,GAAG;AAAA,KAAHA,GAAG;AA0IZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}