{"ast":null,"code":"var _jsxFileName = \"/Users/h-02/Desktop/app/whitelistDapp/client/src/components/PurchaseToken.js\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PurchaseTokens = _ref => {\n  let {\n    state\n  } = _ref;\n  const purchaseTokens = async event => {\n    event.preventDefault();\n    const {\n      provider,\n      signer,\n      contract\n    } = state;\n    const amount = document.querySelector(\"#amountOfTokens\").value;\n    console.log(\"Requested amount:\", amount);\n    const balanceOfTokensBefore = await contract.balanceOf(signer.getAddress());\n    console.log(`Token balance of user ${signer.getAddress()} before purchase is ${balanceOfTokensBefore}`);\n    const amountOfTokens = ethers.utils.parseEther(amount);\n    console.log(\"Parsed amount:\", amountOfTokens);\n    const price = ethers.utils.parseEther(\"0.0001\");\n    const valueToSend = amount.mul(price);\n    const transaction = await contract.purchaseTokens(amountOfTokens, {\n      val\n    });\n    const balanceOfTokens = await contract.balanceOf(signer.getAddress());\n    console.log(`Token balance of user ${signer.getAddress()} after purchase is ${balanceOfTokens}`);\n    // setTokenStatus(transaction);\n    console.log(transaction);\n    console.log(\"Transaction is done\", transaction);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-md\",\n      style: {\n        width: \"50%\",\n        marginTop: \"25px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: purchaseTokens,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Enter amount of tokens to purchase\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"amountOfTokens\",\n            placeholder: \"Enter amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-success\",\n          disabled: !state.contract,\n          children: \"Purchase XALTS Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = PurchaseTokens;\nexport default PurchaseTokens;\nvar _c;\n$RefreshReg$(_c, \"PurchaseTokens\");","map":{"version":3,"names":["ethers","PurchaseTokens","state","purchaseTokens","event","preventDefault","provider","signer","contract","amount","document","querySelector","value","console","log","balanceOfTokensBefore","balanceOf","getAddress","amountOfTokens","utils","parseEther","price","valueToSend","mul","transaction","val","balanceOfTokens","width","marginTop"],"sources":["/Users/h-02/Desktop/app/whitelistDapp/client/src/components/PurchaseToken.js"],"sourcesContent":["import { ethers } from \"ethers\";\nconst PurchaseTokens = ({ state }) => {\n  const purchaseTokens = async (event) => {\n    event.preventDefault();\n    const { provider, signer, contract } = state;\n    const amount = document.querySelector(\"#amountOfTokens\").value;\n    console.log(\"Requested amount:\", amount);\n    const balanceOfTokensBefore = await contract.balanceOf(signer.getAddress());\n    console.log(\n      `Token balance of user ${signer.getAddress()} before purchase is ${balanceOfTokensBefore}`\n    );\n    const amountOfTokens = ethers.utils.parseEther(amount);\n    console.log(\"Parsed amount:\", amountOfTokens);\n    const price = ethers.utils.parseEther(\"0.0001\");\n    const valueToSend = amount.mul(price);\n    const transaction = await contract.purchaseTokens(amountOfTokens, {val});\n    const balanceOfTokens = await contract.balanceOf(signer.getAddress());\n    console.log(\n      `Token balance of user ${signer.getAddress()} after purchase is ${balanceOfTokens}`\n    );\n    // setTokenStatus(transaction);\n    console.log(transaction);\n    console.log(\"Transaction is done\", transaction);\n  };\n  return (\n    <>\n      <div className=\"container-md\" style={{ width: \"50%\", marginTop: \"25px\" }}>\n        <form onSubmit={purchaseTokens}>\n          <div className=\"mb-3\">\n            <label className=\"form-label\">\n              Enter amount of tokens to purchase\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"amountOfTokens\"\n              placeholder=\"Enter amount\"\n            />\n          </div>\n          <button\n            type=\"submit\"\n            className=\"btn btn-success\"\n            disabled={!state.contract}\n          >\n            Purchase XALTS Token\n          </button>\n        </form>\n      </div>\n      <p></p>\n    </>\n  );\n};\n\nexport default PurchaseTokens;\n"],"mappings":";AAAA,SAASA,MAAM,QAAQ,QAAQ;AAAC;AAAA;AAChC,MAAMC,cAAc,GAAG,QAAe;EAAA,IAAd;IAAEC;EAAM,CAAC;EAC/B,MAAMC,cAAc,GAAG,MAAOC,KAAK,IAAK;IACtCA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAM;MAAEC,QAAQ;MAAEC,MAAM;MAAEC;IAAS,CAAC,GAAGN,KAAK;IAC5C,MAAMO,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,iBAAiB,CAAC,CAACC,KAAK;IAC9DC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEL,MAAM,CAAC;IACxC,MAAMM,qBAAqB,GAAG,MAAMP,QAAQ,CAACQ,SAAS,CAACT,MAAM,CAACU,UAAU,EAAE,CAAC;IAC3EJ,OAAO,CAACC,GAAG,CACR,yBAAwBP,MAAM,CAACU,UAAU,EAAG,uBAAsBF,qBAAsB,EAAC,CAC3F;IACD,MAAMG,cAAc,GAAGlB,MAAM,CAACmB,KAAK,CAACC,UAAU,CAACX,MAAM,CAAC;IACtDI,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEI,cAAc,CAAC;IAC7C,MAAMG,KAAK,GAAGrB,MAAM,CAACmB,KAAK,CAACC,UAAU,CAAC,QAAQ,CAAC;IAC/C,MAAME,WAAW,GAAGb,MAAM,CAACc,GAAG,CAACF,KAAK,CAAC;IACrC,MAAMG,WAAW,GAAG,MAAMhB,QAAQ,CAACL,cAAc,CAACe,cAAc,EAAE;MAACO;IAAG,CAAC,CAAC;IACxE,MAAMC,eAAe,GAAG,MAAMlB,QAAQ,CAACQ,SAAS,CAACT,MAAM,CAACU,UAAU,EAAE,CAAC;IACrEJ,OAAO,CAACC,GAAG,CACR,yBAAwBP,MAAM,CAACU,UAAU,EAAG,sBAAqBS,eAAgB,EAAC,CACpF;IACD;IACAb,OAAO,CAACC,GAAG,CAACU,WAAW,CAAC;IACxBX,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEU,WAAW,CAAC;EACjD,CAAC;EACD,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,cAAc;MAAC,KAAK,EAAE;QAAEG,KAAK,EAAE,KAAK;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAA,uBACvE;QAAM,QAAQ,EAAEzB,cAAe;QAAA,wBAC7B;UAAK,SAAS,EAAC,MAAM;UAAA,wBACnB;YAAO,SAAS,EAAC,YAAY;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAErB,eACR;YACE,IAAI,EAAC,MAAM;YACX,SAAS,EAAC,cAAc;YACxB,EAAE,EAAC,gBAAgB;YACnB,WAAW,EAAC;UAAc;YAAA;YAAA;YAAA;UAAA,QAC1B;QAAA;UAAA;UAAA;UAAA;QAAA,QACE,eACN;UACE,IAAI,EAAC,QAAQ;UACb,SAAS,EAAC,iBAAiB;UAC3B,QAAQ,EAAE,CAACD,KAAK,CAACM,QAAS;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAGnB;MAAA;QAAA;QAAA;QAAA;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA,QACH,eACN;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA,gBACN;AAEP,CAAC;AAAC,KAlDIP,cAAc;AAoDpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}