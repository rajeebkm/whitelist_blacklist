{"ast":null,"code":"var _jsxFileName = \"/Users/h-02/Desktop/app/whitelistDapp/client/src/App.js\",\n  _s = $RefreshSig$();\nimport abi from \"./contracts/xalts.json\";\nimport React, { useState, useEffect } from \"react\";\nimport PurchaseTokens from \"./components/purchaseTokens.js\";\nimport WhitelistBlacklist from \"./components/WhitelistBlacklist.js\";\nimport logo from \"./logo-main.png\";\nimport \"./App.css\";\n// import { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ethers = require(\"ethers\");\nfunction App() {\n  _s();\n  const [state, setState] = useState({\n    provider: null,\n    signer: null,\n    contract: null\n  });\n  const [account, setAccount] = useState(\"Not Connected\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [balance, setBalance] = useState(null);\n\n  // useEffect(() => {\n  //   if (window.ethereum) {\n  //     window.ethereum.on(\"accountChanged\", accountChanged);\n  //     window.ethereum.on(\"chainChanged\", chainChanged);\n  //   }\n  // }, []);\n\n  const connectWallet = async () => {\n    const contractAddress = \"0x09dcc35e2360f672D4E08C38cfE1A13A18Cf73C8\";\n    const contractABI = abi.abi;\n    const {\n      ethereum\n    } = window;\n    if (window.ethereum) {\n      try {\n        await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        }).then(result => {\n          accountChanged([result[0]]);\n        });\n        // await accountChanged(res[0]);\n\n        window.ethereum.on(\"chainChanged\", () => {\n          window.location.reload();\n        });\n        window.ethereum.on(\"accountChanged\", () => {\n          window.location.reload();\n        });\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(contractAddress, contractABI, signer);\n        setAccount(account);\n        setState({\n          provider,\n          signer,\n          contract\n        });\n      } catch (err) {\n        console.error(err);\n        setErrorMessage(\"There was a problem connecting to MetaMask\");\n      }\n    } else {\n      setErrorMessage(\"Install MetaMask\");\n    }\n  };\n  const accountChanged = async newAccount => {\n    setAccount(newAccount);\n    try {\n      const balance = await window.ethereum.request({\n        method: \"eth_getBalance\",\n        params: [newAccount.toString(), \"latest\"]\n      });\n      setBalance(ethers.utils.formatEther(balance));\n    } catch (err) {\n      console.error(err);\n      setErrorMessage(\"There was a problem connecting to MetaMask\");\n    }\n  };\n  const chainChanged = () => {\n    setErrorMessage(null);\n    setAccount(null);\n    setBalance(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#EFEFEF\",\n      height: \"100%\",\n      marginTop: \"0px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginLeft: \"1280px\",\n        marginTop: \"8px\"\n      },\n      className: \"block-button\",\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      style: {\n        marginLeft: \"900px\",\n        marginTop: \"20px\"\n      },\n      children: [\"Account: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      style: {\n        marginLeft: \"980px\",\n        marginTop: \"8px\"\n      },\n      children: [\"ETH Balance: \", balance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      width: \"6%\",\n      height: \"6%\",\n      style: {\n        marginLeft: \"10px\",\n        marginTop: \"0px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginLeft: \"406px\",\n        color: \"Blue\",\n        marginTop: \"0px\",\n        fontSize: \"35px\"\n      },\n      children: \"XALTS Token [Whitelist/Blacklist]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(WhitelistBlacklist, {\n        state: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PurchaseTokens, {\n        state: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rfDNkfkQaRDA4BGC6P2Fce/XDDk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["abi","React","useState","useEffect","PurchaseTokens","WhitelistBlacklist","logo","ethers","require","App","state","setState","provider","signer","contract","account","setAccount","errorMessage","setErrorMessage","balance","setBalance","connectWallet","contractAddress","contractABI","ethereum","window","request","method","then","result","accountChanged","on","location","reload","providers","Web3Provider","getSigner","Contract","err","console","error","newAccount","params","toString","utils","formatEther","chainChanged","backgroundColor","height","marginTop","marginLeft","color","fontSize"],"sources":["/Users/h-02/Desktop/app/whitelistDapp/client/src/App.js"],"sourcesContent":["import abi from \"./contracts/xalts.json\";\nimport React, { useState, useEffect } from \"react\";\nimport PurchaseTokens from \"./components/purchaseTokens.js\";\nimport WhitelistBlacklist from \"./components/WhitelistBlacklist.js\";\nimport logo from \"./logo-main.png\";\nimport \"./App.css\";\n// import { ethers } from \"ethers\";\nconst ethers = require(\"ethers\");\n\nfunction App() {\n  const [state, setState] = useState({\n    provider: null,\n    signer: null,\n    contract: null,\n  });\n  const [account, setAccount] = useState(\"Not Connected\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [balance, setBalance] = useState(null);\n\n  // useEffect(() => {\n  //   if (window.ethereum) {\n  //     window.ethereum.on(\"accountChanged\", accountChanged);\n  //     window.ethereum.on(\"chainChanged\", chainChanged);\n  //   }\n  // }, []);\n\n  const connectWallet = async () => {\n    const contractAddress = \"0x09dcc35e2360f672D4E08C38cfE1A13A18Cf73C8\";\n    const contractABI = abi.abi;\n    const { ethereum } = window;\n    if (window.ethereum) {\n      try {\n        await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        }).then(result => {\n          accountChanged([result[0]])\n        })\n        // await accountChanged(res[0]);\n\n        window.ethereum.on(\"chainChanged\", () => {\n          window.location.reload();\n        });\n\n        window.ethereum.on(\"accountChanged\", () => {\n          window.location.reload();\n        });\n\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(\n          contractAddress,\n          contractABI,\n          signer\n        );\n        setAccount(account);\n        setState({ provider, signer, contract });\n      } catch (err) {\n        console.error(err);\n        setErrorMessage(\"There was a problem connecting to MetaMask\");\n      }\n    } else {\n      setErrorMessage(\"Install MetaMask\");\n    }\n  };\n\n  const accountChanged = async (newAccount) => {\n    setAccount(newAccount);\n    try {\n      const balance = await window.ethereum.request({\n        method: \"eth_getBalance\",\n        params: [newAccount.toString(), \"latest\"],\n      });\n      setBalance(ethers.utils.formatEther(balance));\n    } catch (err) {\n      console.error(err);\n      setErrorMessage(\"There was a problem connecting to MetaMask\");\n    }\n  };\n\n  const chainChanged = () => {\n    setErrorMessage(null);\n    setAccount(null);\n    setBalance(null);\n  };\n\n  return (\n    <div\n      style={{ backgroundColor: \"#EFEFEF\", height: \"100%\", marginTop: \"0px\" }}\n    >\n      <button\n        style={{ marginLeft: \"1280px\", marginTop: \"8px\" }}\n        className=\"block-button\"\n        onClick={connectWallet}\n      >\n        Connect Wallet\n      </button>\n      <h6 style={{ marginLeft: \"900px\", marginTop: \"20px\" }}>\n        Account: {account}\n      </h6>\n      <h6 style={{ marginLeft: \"980px\", marginTop: \"8px\" }}>\n        ETH Balance: {balance}\n      </h6>\n      <img\n        src={logo}\n        width=\"6%\"\n        height=\"6%\"\n        style={{ marginLeft: \"10px\", marginTop: \"0px\" }}\n      />\n      <h2\n        style={{\n          marginLeft: \"406px\",\n          color: \"Blue\",\n          marginTop: \"0px\",\n          fontSize: \"35px\",\n        }}\n      >\n        XALTS Token [Whitelist/Blacklist]\n      </h2>\n      <div className=\"container\">\n        <WhitelistBlacklist state={state} />\n        <PurchaseTokens state={state} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}