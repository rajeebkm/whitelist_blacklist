{"ast":null,"code":"var _jsxFileName = \"/Users/h-02/Desktop/app/whitelistDapp/client/src/App.js\",\n  _s = $RefreshSig$();\nimport abi from \"./contract/chai.json\";\nimport { Button, Paper, Stack, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport Buy from \"./components/Buy\";\n// import { Button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Card from \"react-bootstrap/Card\";\nimport ReactDOM from \"react-dom\";\n// import Memos from \"./components/Memos\";\nimport Whitelist from \"./components/Whitelist\";\nimport Blacklist from \"./components/Blacklist\";\nimport PurchaseToken from \"./components/PurchaseToken\";\nimport connectWallet from \"./components/connectWallet\";\n// import chai from \"./chai.png\";\nimport banner from \"./banner.jpeg\";\nimport \"./App.css\";\nimport { Left } from \"react-bootstrap/lib/Media\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [state, setState] = useState({\n    provider: null,\n    signer: null,\n    contract: null\n  });\n  const [account, setAccount] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [balance, setBalance] = useState(null);\n  // useEffect(() => {\n  // const connectWallet = () => {\n  // const [errorMessage, setErrorMessage] = useState(null);\n  // const [account, setAccount] = useState(null);\n  // const [balance, setBalance] = useState(null);\n\n  // useEffect(() => {\n  //   if (window.ethereum) {\n  //     window.ethereum.on(\"accountChanged\", accountChanged);\n  //     window.ethereum.on(\"chainChanged\", chainChanged);\n  //   }\n  // }, []);\n\n  const connectWallet = async () => {\n    const contractAddress = \"0x46436dcb1b29b111a00bb61f5475b420ef1104eb\";\n    const contractABI = abi.abi;\n    if (window.ethereum) {\n      try {\n        const res = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        await accountChanged(res[0]);\n        window.ethereum.on(\"chainChanged\", () => {\n          window.location.reload();\n        });\n        window.ethereum.on(\"accountsChanged\", () => {\n          window.location.reload();\n        });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(contractAddress, contractABI, signer);\n        //       setAccount(account);\n        setState({\n          provider,\n          signer,\n          contract\n        });\n      } catch (err) {\n        console.error(err);\n        setErrorMessage(\"There was a problem connecting to MetaMask\");\n      }\n    } else {\n      setErrorMessage(\"Install MetaMask\");\n    }\n  };\n  const accountChanged = async newAccount => {\n    setAccount(newAccount);\n    try {\n      const balance = await window.ethereum.request({\n        method: \"eth_getBalance\",\n        params: [newAccount.toString(), \"latest\"]\n      });\n      setBalance(ethers.utils.formatEther(balance));\n    } catch (err) {\n      console.error(err);\n      setErrorMessage(\"There was a problem connecting to MetaMask\");\n    }\n  };\n  const chainChanged = () => {\n    setErrorMessage(null);\n    setAccount(null);\n    setBalance(null);\n  };\n  // const connectWallet = async () => {\n  // const contractAddress = \"0x46436dcb1b29b111a00bb61f5475b420ef1104eb\";\n  // const contractABI = abi.abi;\n  //   try {\n  //     const { ethereum } = window;\n\n  //     if (ethereum) {\n  //       const account = await ethereum.request({\n  //         method: \"eth_requestAccounts\",\n  //       });\n\n  //       window.ethereum.on(\"chainChanged\", () => {\n  //         window.location.reload();\n  //       });\n\n  //       window.ethereum.on(\"accountsChanged\", () => {\n  //         window.location.reload();\n  //       });\n\n  //       const provider = new ethers.providers.Web3Provider(ethereum);\n  //       const signer = provider.getSigner();\n  //       const contract = new ethers.Contract(\n  //         contractAddress,\n  //         contractABI,\n  //         signer\n  //       );\n  // //       setAccount(account);\n  //       setState({ provider, signer, contract });\n  //     } else {\n  //       alert(\"Please install metamask\");\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // };\n  // connectWallet();\n  // connectHandler();\n  // }, []);\n  // console.log(state);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#EFEFEF\",\n      height: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"block-button\",\n      onClick: connectWallet,\n      style: {\n        \"color\": \"white\",\n        padding: \"10px.: 0 from. \"\n      },\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Account: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Balance: \", balance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: banner,\n      className: \"img-fluid\",\n      alt: \"..\",\n      width: \"100%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      class: \"text-muted lead \",\n      style: {\n        marginTop: \"10px\",\n        marginLeft: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Connected Account - \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Whitelist, {\n        state: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        marginTop: \"45px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Blacklist, {\n        state: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8iLK1ik8WKG6Nh0s1P6PLusWAn4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["abi","Button","Paper","Stack","Typography","React","useEffect","useState","ethers","Buy","Card","ReactDOM","Whitelist","Blacklist","PurchaseToken","connectWallet","banner","Left","App","state","setState","provider","signer","contract","account","setAccount","errorMessage","setErrorMessage","balance","setBalance","contractAddress","contractABI","window","ethereum","res","request","method","accountChanged","on","location","reload","providers","Web3Provider","getSigner","Contract","err","console","error","newAccount","params","toString","utils","formatEther","chainChanged","backgroundColor","height","padding","marginTop","marginLeft"],"sources":["/Users/h-02/Desktop/app/whitelistDapp/client/src/App.js"],"sourcesContent":["import abi from \"./contract/chai.json\";\nimport { Button, Paper, Stack, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport Buy from \"./components/Buy\";\n// import { Button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Card from \"react-bootstrap/Card\";\nimport ReactDOM from \"react-dom\";\n// import Memos from \"./components/Memos\";\nimport Whitelist from \"./components/Whitelist\";\nimport Blacklist from \"./components/Blacklist\";\nimport PurchaseToken from \"./components/PurchaseToken\";\nimport connectWallet from \"./components/connectWallet\";\n// import chai from \"./chai.png\";\nimport banner from \"./banner.jpeg\";\nimport \"./App.css\";\nimport { Left } from \"react-bootstrap/lib/Media\";\n\nfunction App() {\n  const [state, setState] = useState({\n    provider: null,\n    signer: null,\n    contract: null,\n  });\n  const [account, setAccount] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [balance, setBalance] = useState(null);\n  // useEffect(() => {\n    // const connectWallet = () => {\n      // const [errorMessage, setErrorMessage] = useState(null);\n      // const [account, setAccount] = useState(null);\n      // const [balance, setBalance] = useState(null);\n\n      // useEffect(() => {\n      //   if (window.ethereum) {\n      //     window.ethereum.on(\"accountChanged\", accountChanged);\n      //     window.ethereum.on(\"chainChanged\", chainChanged);\n      //   }\n      // }, []);\n\n      const connectWallet = async () => {\n         const contractAddress = \"0x46436dcb1b29b111a00bb61f5475b420ef1104eb\";\n         const contractABI = abi.abi;\n        if (window.ethereum) {\n          try {\n            const res = await window.ethereum.request({\n              method: \"eth_requestAccounts\",\n            });\n            await accountChanged(res[0]);\n\n            window.ethereum.on(\"chainChanged\", () => {\n              window.location.reload();\n            });\n\n            window.ethereum.on(\"accountsChanged\", () => {\n              window.location.reload();\n            });\n\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\n            const signer = provider.getSigner();\n            const contract = new ethers.Contract(\n              contractAddress,\n              contractABI,\n              signer\n            );\n            //       setAccount(account);\n            setState({ provider, signer, contract });\n          } catch (err) {\n            console.error(err);\n            setErrorMessage(\"There was a problem connecting to MetaMask\");\n          }\n        } else {\n          setErrorMessage(\"Install MetaMask\");\n        }\n      };\n\n      const accountChanged = async (newAccount) => {\n        setAccount(newAccount);\n        try {\n          const balance = await window.ethereum.request({\n            method: \"eth_getBalance\",\n            params: [newAccount.toString(), \"latest\"],\n          });\n          setBalance(ethers.utils.formatEther(balance));\n        } catch (err) {\n          console.error(err);\n          setErrorMessage(\"There was a problem connecting to MetaMask\");\n        }\n      };\n\n      const chainChanged = () => {\n        setErrorMessage(null);\n        setAccount(null);\n        setBalance(null);\n      };\n      // const connectWallet = async () => {\n      // const contractAddress = \"0x46436dcb1b29b111a00bb61f5475b420ef1104eb\";\n      // const contractABI = abi.abi;\n      //   try {\n      //     const { ethereum } = window;\n\n      //     if (ethereum) {\n      //       const account = await ethereum.request({\n      //         method: \"eth_requestAccounts\",\n      //       });\n\n      //       window.ethereum.on(\"chainChanged\", () => {\n      //         window.location.reload();\n      //       });\n\n      //       window.ethereum.on(\"accountsChanged\", () => {\n      //         window.location.reload();\n      //       });\n\n      //       const provider = new ethers.providers.Web3Provider(ethereum);\n      //       const signer = provider.getSigner();\n      //       const contract = new ethers.Contract(\n      //         contractAddress,\n      //         contractABI,\n      //         signer\n      //       );\n      // //       setAccount(account);\n      //       setState({ provider, signer, contract });\n      //     } else {\n      //       alert(\"Please install metamask\");\n      //     }\n      //   } catch (error) {\n      //     console.log(error);\n      //   }\n    // };\n    // connectWallet();\n    // connectHandler();\n  // }, []);\n  // console.log(state);\n  return (\n    <div style={{ backgroundColor: \"#EFEFEF\", height: \"100%\" }}>\n      <button className=\"block-button\" onClick={connectWallet} style={{\"color\": \"white\", padding: \"10px.: 0 from. \", }}>Connect Wallet</button>\n      <h3>Account: {account}</h3>\n      <h3>Balance: {balance}</h3>\n      <img src={banner} className=\"img-fluid\" alt=\"..\" width=\"100%\" />\n      <p\n        class=\"text-muted lead \"\n        style={{ marginTop: \"10px\", marginLeft: \"5px\" }}\n      >\n        <small>Connected Account - {account}</small>\n      </p>\n      <div className=\"container\">\n        <Whitelist state={state} />\n      </div>\n      <div className=\"container\" style={{ marginTop: \"45px\" }}>\n        <Blacklist state={state} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}