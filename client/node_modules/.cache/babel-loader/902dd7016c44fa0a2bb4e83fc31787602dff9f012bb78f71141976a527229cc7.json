{"ast":null,"code":"var _jsxFileName = \"/Users/h-02/Desktop/app/whitelistDapp/client/src/App.js\",\n  _s = $RefreshSig$();\nimport abi from \"./contracts/xalts.json\";\nimport React, { useState, useEffect } from \"react\";\nimport PurchaseTokens from \"./components/purchaseTokens.js\";\nimport WhitelistBlacklist from \"./components/WhitelistBlacklist.js\";\nimport logo from \"./logo-main.png\";\nimport \"./App.css\";\n// import { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ethers = require(\"ethers\");\nfunction App() {\n  _s();\n  const [state, setState] = useState({\n    provider: null,\n    signer: null,\n    contract: null\n  });\n  const [account, setAccount] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [balance, setBalance] = useState(null);\n  // useEffect(() => {\n  //   const connectWallet = async () => {\n  //     const contractAddress = \"0x46436dcb1b29b111a00bb61f5475b420ef1104eb\";\n  //     const contractABI = abi.abi;\n  //     try {\n  //       const { ethereum } = window;\n\n  //       if (ethereum) {\n  //         const account = await ethereum.request({\n  //           method: \"eth_requestAccounts\",\n  //         });\n\n  //         window.ethereum.on(\"chainChanged\", () => {\n  //           window.location.reload();\n  //         });\n\n  //         window.ethereum.on(\"accountsChanged\", () => {\n  //           window.location.reload();\n  //         });\n\n  //         const provider = new ethers.providers.Web3Provider(ethereum);\n  //         const signer = provider.getSigner();\n  //         const contract = new ethers.Contract(\n  //           contractAddress,\n  //           contractABI,\n  //           signer\n  //         );\n  //         setAccount(account);\n  //         setState({ provider, signer, contract });\n  //       } else {\n  //         alert(\"Please install metamask\");\n  //       }\n  //     } catch (error) {\n  //       console.log(error);\n  //     }\n  //   };\n  //   connectWallet();\n  // }, []);\n\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", accountsChanged);\n      window.ethereum.on(\"chainChanged\", chainChanged);\n    }\n  }, []);\n  const connectHandler = async () => {\n    const contractAddress = \"0x09dcc35e2360f672D4E08C38cfE1A13A18Cf73C8\";\n    const contractABI = abi.abi;\n    const {\n      ethereum\n    } = window;\n    if (window.ethereum) {\n      try {\n        const res = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        await accountsChanged(res[0]);\n        window.ethereum.on(\"chainChanged\", () => {\n          window.location.reload();\n        });\n        window.ethereum.on(\"accountsChanged\", () => {\n          window.location.reload();\n        });\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(contractAddress, contractABI, signer);\n        setAccount(account);\n        setState({\n          provider,\n          signer,\n          contract\n        });\n      } catch (err) {\n        console.error(err);\n        setErrorMessage(\"There was a problem connecting to MetaMask\");\n      }\n    } else {\n      setErrorMessage(\"Install MetaMask\");\n    }\n  };\n  const accountsChanged = async newAccount => {\n    setAccount(newAccount);\n    try {\n      const balance = await window.ethereum.request({\n        method: \"eth_getBalance\",\n        params: [newAccount.toString(), \"latest\"]\n      });\n      setBalance(ethers.utils.formatEther(balance));\n    } catch (err) {\n      console.error(err);\n      setErrorMessage(\"There was a problem connecting to MetaMask\");\n    }\n  };\n  const chainChanged = () => {\n    setErrorMessage(null);\n    setAccount(null);\n    setBalance(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#EFEFEF\",\n      height: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginLeft: \"1270px\"\n      },\n      className: \"block-button\",\n      onClick: connectHandler,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      style: {\n        marginLeft: \"1020px\"\n      },\n      children: [\"Account: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      style: {\n        marginLeft: \"1020px\"\n      },\n      children: [\"Balance: \", balance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      className: \"img-fluid\",\n      alt: \"..\",\n      width: \"10%\",\n      height: \"10%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      class: \"text-muted lead \",\n      style: {\n        marginTop: \"10px\",\n        marginLeft: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Connected Account - \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(WhitelistBlacklist, {\n        state: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PurchaseTokens, {\n        state: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2ZpsoqzlbnMaOmt+b/qzkLRfkro=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["abi","React","useState","useEffect","PurchaseTokens","WhitelistBlacklist","logo","ethers","require","App","state","setState","provider","signer","contract","account","setAccount","errorMessage","setErrorMessage","balance","setBalance","window","ethereum","on","accountsChanged","chainChanged","connectHandler","contractAddress","contractABI","res","request","method","location","reload","providers","Web3Provider","getSigner","Contract","err","console","error","newAccount","params","toString","utils","formatEther","backgroundColor","height","marginLeft","marginTop"],"sources":["/Users/h-02/Desktop/app/whitelistDapp/client/src/App.js"],"sourcesContent":["import abi from \"./contracts/xalts.json\";\nimport React, { useState, useEffect } from \"react\";\nimport PurchaseTokens from \"./components/purchaseTokens.js\";\nimport WhitelistBlacklist from \"./components/WhitelistBlacklist.js\";\nimport logo from \"./logo-main.png\";\nimport \"./App.css\";\n// import { ethers } from \"ethers\";\nconst ethers = require(\"ethers\");\n\nfunction App() {\n  const [state, setState] = useState({\n    provider: null,\n    signer: null,\n    contract: null,\n  });\n  const [account, setAccount] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [balance, setBalance] = useState(null);\n  // useEffect(() => {\n  //   const connectWallet = async () => {\n  //     const contractAddress = \"0x46436dcb1b29b111a00bb61f5475b420ef1104eb\";\n  //     const contractABI = abi.abi;\n  //     try {\n  //       const { ethereum } = window;\n\n  //       if (ethereum) {\n  //         const account = await ethereum.request({\n  //           method: \"eth_requestAccounts\",\n  //         });\n\n  //         window.ethereum.on(\"chainChanged\", () => {\n  //           window.location.reload();\n  //         });\n\n  //         window.ethereum.on(\"accountsChanged\", () => {\n  //           window.location.reload();\n  //         });\n\n  //         const provider = new ethers.providers.Web3Provider(ethereum);\n  //         const signer = provider.getSigner();\n  //         const contract = new ethers.Contract(\n  //           contractAddress,\n  //           contractABI,\n  //           signer\n  //         );\n  //         setAccount(account);\n  //         setState({ provider, signer, contract });\n  //       } else {\n  //         alert(\"Please install metamask\");\n  //       }\n  //     } catch (error) {\n  //       console.log(error);\n  //     }\n  //   };\n  //   connectWallet();\n  // }, []);\n\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", accountsChanged);\n      window.ethereum.on(\"chainChanged\", chainChanged);\n    }\n  }, []);\n\n  const connectHandler = async () => {\n    const contractAddress = \"0x09dcc35e2360f672D4E08C38cfE1A13A18Cf73C8\";\n    const contractABI = abi.abi;\n    const { ethereum } = window;\n    if (window.ethereum) {\n      try {\n        const res = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        await accountsChanged(res[0]);\n        window.ethereum.on(\"chainChanged\", () => {\n          window.location.reload();\n        });\n\n        window.ethereum.on(\"accountsChanged\", () => {\n          window.location.reload();\n        });\n\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(\n          contractAddress,\n          contractABI,\n          signer\n        );\n        setAccount(account);\n        setState({ provider, signer, contract });\n      } catch (err) {\n        console.error(err);\n        setErrorMessage(\"There was a problem connecting to MetaMask\");\n      }\n    } else {\n      setErrorMessage(\"Install MetaMask\");\n    }\n  };\n\n  const accountsChanged = async (newAccount) => {\n    setAccount(newAccount);\n    try {\n      const balance = await window.ethereum.request({\n        method: \"eth_getBalance\",\n        params: [newAccount.toString(), \"latest\"],\n      });\n      setBalance(ethers.utils.formatEther(balance));\n    } catch (err) {\n      console.error(err);\n      setErrorMessage(\"There was a problem connecting to MetaMask\");\n    }\n  };\n\n  const chainChanged = () => {\n    setErrorMessage(null);\n    setAccount(null);\n    setBalance(null);\n  };\n  return (\n    <div style={{ backgroundColor: \"#EFEFEF\", height: \"100%\" }}>\n      <button\n        style={{ marginLeft: \"1270px\" }}\n        className=\"block-button\"\n        onClick={connectHandler}\n      >\n        Connect Wallet\n      </button>\n      <h5 style={{ marginLeft: \"1020px\" }}>Account: {account}</h5>\n      <h5 style={{ marginLeft: \"1020px\" }}>Balance: {balance}</h5>\n      <img\n        src={logo}\n        className=\"img-fluid\"\n        alt=\"..\"\n        width=\"10%\"\n        height={\"10%\"}\n      />\n      <p\n        class=\"text-muted lead \"\n        style={{ marginTop: \"10px\", marginLeft: \"5px\" }}\n      >\n        <small>Connected Account - {account}</small>\n      </p>\n      <div className=\"container\">\n        <WhitelistBlacklist state={state} />\n        <PurchaseTokens state={state} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}