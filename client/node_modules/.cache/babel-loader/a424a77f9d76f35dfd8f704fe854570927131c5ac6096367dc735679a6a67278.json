{"ast":null,"code":"var _jsxFileName = \"/Users/h-02/Desktop/app/whitelistDapp/client/src/App.js\",\n  _s = $RefreshSig$();\nimport abi from \"./contract/chai.json\";\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport Buy from \"./components/Buy\";\nimport { Button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Card from \"react-bootstrap/Card\";\nimport ReactDOM from \"react-dom\";\nimport React, { Component } from \"react\";\n// import Memos from \"./components/Memos\";\nimport Whitelist from \"./components/Whitelist\";\nimport Blacklist from \"./components/Blacklist\";\nimport PurchaseToken from \"./components/PurchaseToken\";\nimport ConnectWallet from \"./components/connectWallet\";\n// import chai from \"./chai.png\";\nimport banner from \"./banner.jpeg\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [state, setState] = useState({\n    provider: null,\n    signer: null,\n    contract: null\n  });\n  const [data, setdata] = useState({\n    address: \"\",\n    Balance: null\n  });\n  const [account, setAccount] = useState(\"None\");\n  // useEffect(() => {\n  // Button handler button for handling a\n  // request event for metamask\n  const btnhandler = () => {\n    // Asking if metamask is already present or not\n    if (window.ethereum) {\n      // res[0] for fetching a first wallet\n      window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      }).then(res => accountChangeHandler(res[0]));\n    } else {\n      alert(\"install metamask extension!!\");\n    }\n  };\n\n  // getbalance function for getting a balance in\n  // a right format with help of ethers\n  const getbalance = address => {\n    // Requesting balance method\n    window.ethereum.request({\n      method: \"eth_getBalance\",\n      params: [address, \"latest\"]\n    }).then(balance => {\n      // Setting balance\n      setdata({\n        Balance: ethers.utils.formatEther(balance)\n      });\n    });\n  };\n\n  // Function for getting handling all events\n  const accountChangeHandler = account => {\n    // Setting an address data\n    setdata({\n      address: account\n    });\n\n    // Setting a balance\n    getbalance(account);\n  };\n  // const connectWallet = async () => {\n  //   const contractAddress = \"0x46436dcb1b29b111a00bb61f5475b420ef1104eb\";\n  //   const contractABI = abi.abi;\n  //   try {\n  //     const { ethereum } = window;\n\n  //     if (ethereum) {\n  //       const account = await ethereum.request({\n  //         method: \"eth_requestAccounts\",\n  //       });\n\n  //       window.ethereum.on(\"chainChanged\", () => {\n  //         window.location.reload();\n  //       });\n\n  //       window.ethereum.on(\"accountsChanged\", () => {\n  //         window.location.reload();\n  //       });\n\n  //       const provider = new ethers.providers.Web3Provider(ethereum);\n  //       const signer = provider.getSigner();\n  //       const contract = new ethers.Contract(\n  //         contractAddress,\n  //         contractABI,\n  //         signer\n  //       );\n  //       setAccount(account);\n  //       setState({ provider, signer, contract });\n  //     } else {\n  //       alert(\"Please install metamask\");\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // };\n  // connectWallet();\n  // }, []);\n  console.log(state);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#EFEFEF\",\n      height: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Address: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), data.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Balance: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), data.Balance]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: btnhandler,\n            variant: \"primary\",\n            children: \"Connect to wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: banner,\n      className: \"img-fluid\",\n      alt: \"..\",\n      width: \"100%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      class: \"text-muted lead \",\n      style: {\n        marginTop: \"10px\",\n        marginLeft: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Connected Account - \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Whitelist, {\n        state: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        marginTop: \"45px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Blacklist, {\n        state: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zX708MSvO/u4yYhphBYMlab2qfA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["abi","useState","useEffect","ethers","Buy","Button","Card","ReactDOM","React","Component","Whitelist","Blacklist","PurchaseToken","ConnectWallet","banner","App","state","setState","provider","signer","contract","data","setdata","address","Balance","account","setAccount","btnhandler","window","ethereum","request","method","then","res","accountChangeHandler","alert","getbalance","params","balance","utils","formatEther","console","log","backgroundColor","height","marginTop","marginLeft"],"sources":["/Users/h-02/Desktop/app/whitelistDapp/client/src/App.js"],"sourcesContent":["import abi from \"./contract/chai.json\";\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport Buy from \"./components/Buy\";\nimport { Button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Card from \"react-bootstrap/Card\";\nimport ReactDOM from \"react-dom\";\nimport React, { Component } from \"react\";\n// import Memos from \"./components/Memos\";\nimport Whitelist from \"./components/Whitelist\";\nimport Blacklist from \"./components/Blacklist\";\nimport PurchaseToken from \"./components/PurchaseToken\";\nimport ConnectWallet from \"./components/connectWallet\";\n// import chai from \"./chai.png\";\nimport banner from \"./banner.jpeg\";\nimport \"./App.css\";\n\nfunction App() {\n  const [state, setState] = useState({\n    provider: null,\n    signer: null,\n    contract: null,\n  });\n\n  const [data, setdata] = useState({\n    address: \"\",\n    Balance: null,\n  });\n  const [account, setAccount] = useState(\"None\");\n  // useEffect(() => {\n  // Button handler button for handling a\n  // request event for metamask\n  const btnhandler = () => {\n    // Asking if metamask is already present or not\n    if (window.ethereum) {\n      // res[0] for fetching a first wallet\n      window.ethereum\n        .request({ method: \"eth_requestAccounts\" })\n        .then((res) => accountChangeHandler(res[0]));\n    } else {\n      alert(\"install metamask extension!!\");\n    }\n  };\n\n  // getbalance function for getting a balance in\n  // a right format with help of ethers\n  const getbalance = (address) => {\n    // Requesting balance method\n    window.ethereum\n      .request({\n        method: \"eth_getBalance\",\n        params: [address, \"latest\"],\n      })\n      .then((balance) => {\n        // Setting balance\n        setdata({\n          Balance: ethers.utils.formatEther(balance),\n        });\n      });\n  };\n\n  // Function for getting handling all events\n  const accountChangeHandler = (account) => {\n    // Setting an address data\n    setdata({\n      address: account,\n    });\n\n    // Setting a balance\n    getbalance(account);\n  };\n  // const connectWallet = async () => {\n  //   const contractAddress = \"0x46436dcb1b29b111a00bb61f5475b420ef1104eb\";\n  //   const contractABI = abi.abi;\n  //   try {\n  //     const { ethereum } = window;\n\n  //     if (ethereum) {\n  //       const account = await ethereum.request({\n  //         method: \"eth_requestAccounts\",\n  //       });\n\n  //       window.ethereum.on(\"chainChanged\", () => {\n  //         window.location.reload();\n  //       });\n\n  //       window.ethereum.on(\"accountsChanged\", () => {\n  //         window.location.reload();\n  //       });\n\n  //       const provider = new ethers.providers.Web3Provider(ethereum);\n  //       const signer = provider.getSigner();\n  //       const contract = new ethers.Contract(\n  //         contractAddress,\n  //         contractABI,\n  //         signer\n  //       );\n  //       setAccount(account);\n  //       setState({ provider, signer, contract });\n  //     } else {\n  //       alert(\"Please install metamask\");\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // };\n  // connectWallet();\n  // }, []);\n  console.log(state);\n  return (\n    <div style={{ backgroundColor: \"#EFEFEF\", height: \"100%\" }}>\n      <div className=\"container\">\n        <Card className=\"text-center\">\n          <Card.Header>\n            <strong>Address: </strong>\n            {data.address}\n          </Card.Header>\n          <Card.Body>\n            <Card.Text>\n              <strong>Balance: </strong>\n              {data.Balance}\n            </Card.Text>\n            <Button onClick={btnhandler} variant=\"primary\">\n              Connect to wallet\n            </Button>\n          </Card.Body>\n        </Card>\n        {/* <ConnectWallet state={state} /> */}\n      </div>\n      <img src={banner} className=\"img-fluid\" alt=\"..\" width=\"100%\" />\n      <p\n        class=\"text-muted lead \"\n        style={{ marginTop: \"10px\", marginLeft: \"5px\" }}\n      >\n        <small>Connected Account - {account}</small>\n      </p>\n      <div className=\"container\">\n        <Whitelist state={state} />\n      </div>\n      <div className=\"container\" style={{ marginTop: \"45px\" }}>\n        <Blacklist state={state} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}