{"ast":null,"code":"var _jsxFileName = \"/Users/h-02/Desktop/app/whitelistDapp/client/src/App.js\",\n  _s = $RefreshSig$();\nimport abi from \"./contract/xalts.json\";\nimport Footer from \"./components/Footer\";\n// import { Button, Paper, Stack, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import Card from \"react-bootstrap/Card\";\n// import ReactDOM from \"react-dom\";\nimport WhitelistBlacklist from \"./components/WhitelistBlacklist\";\nimport PurchaseToken from \"./components/PurchaseToken\";\n// import connectWallet from \"./components/connectWallet\";\nimport logo from \"./logo-main.png\";\n// import banner from \"./banner.jpeg\";\nimport \"./App.css\";\nimport PurchaseTokens from \"./components/PurchaseToken\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [state, setState] = useState({\n    provider: null,\n    signer: null,\n    contract: null\n  });\n  const [account, setAccount] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [balance, setBalance] = useState(null);\n  // const [walletAddress, setwalletAddress] = useState(null);\n\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountChanged\", accountChanged);\n      window.ethereum.on(\"chainChanged\", chainChanged);\n    }\n    // getWalletAddresses();\n  }, []);\n  const connectWallet = async () => {\n    const contractAddress = \"0x09dcc35e2360f672D4E08C38cfE1A13A18Cf73C8\"; // XALTS Token Contract\n    const contractABI = abi.abi;\n    console.log(\"contractAddress\", contractAddress);\n    console.log(\"contractABI\", contractABI);\n    if (window.ethereum) {\n      try {\n        const res = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        await accountChanged(res[0]);\n        window.ethereum.on(\"chainChanged\", () => {\n          window.location.reload();\n        });\n        window.ethereum.on(\"accountsChanged\", () => {\n          window.location.reload();\n        });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        console.log(await signer.getAddress());\n        const contract = new ethers.Contract(contractAddress, contractABI, signer);\n        //       setAccount(account);\n        setState({\n          provider,\n          signer,\n          contract\n        });\n      } catch (err) {\n        console.error(err);\n        setErrorMessage(\"There was a problem connecting to MetaMask\");\n      }\n    } else {\n      setErrorMessage(\"Install MetaMask\");\n    }\n\n    // getWalletAddresses();\n  };\n\n  // const getWalletAddresses = async () => {\n  //   // event.preventDefault();\n  //   const { provider, signer, contract } = state;\n  //   const transaction = await contract.walletAddressList();\n  //   setwalletAddress(transaction[0]);\n  //   console.log(walletAddress);\n  //   console.log(\"Transaction is done\", transaction[0]);\n  // };\n\n  const accountChanged = async newAccount => {\n    setAccount(newAccount);\n    try {\n      const balance = await window.ethereum.request({\n        method: \"eth_getBalance\",\n        params: [newAccount.toString(), \"latest\"]\n      });\n      setBalance(ethers.utils.formatEther(balance));\n    } catch (err) {\n      console.error(err);\n      setErrorMessage(\"There was a problem connecting to MetaMask\");\n    }\n  };\n  const chainChanged = () => {\n    setErrorMessage(null);\n    setAccount(null);\n    setBalance(null);\n  };\n  return (\n    /*#__PURE__*/\n    // <div style={{ backgroundColor: \"#EFEFEF\", height: \"100%\" }}>\n    //   <button className=\"block-button\" onClick={connectWallet}>\n    //     Connect Wallet\n    //   </button>\n    //   <h5 style={{ marginLeft: \"1020px\" }}>Account: {account}</h5>\n    //   <h5 style={{ marginLeft: \"1020px\" }}>Balance: {balance} ETH</h5>\n    //   <img\n    //     src={logo}\n    //     width=\"5%\"\n    //     height=\"5%\"\n    //     style={{ marginLeft: \"10px\", marginTop: \"10px \" }}\n    //   />\n    //   {/* <img src={banner} className=\"img-fluid\" alt=\"..\" width=\"100%\" /> */}\n    //   <div className=\"container\">\n    //     <WhitelistBlacklist state={state} />\n    //   </div>\n    //   <div className=\"container\">\n    //     <PurchaseTokens state={state} />\n    //   </div>\n    _jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)\n    // </div>\n  );\n}\n_s(App, \"2ZpsoqzlbnMaOmt+b/qzkLRfkro=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["abi","Footer","React","useEffect","useState","ethers","WhitelistBlacklist","PurchaseToken","logo","PurchaseTokens","App","state","setState","provider","signer","contract","account","setAccount","errorMessage","setErrorMessage","balance","setBalance","window","ethereum","on","accountChanged","chainChanged","connectWallet","contractAddress","contractABI","console","log","res","request","method","location","reload","providers","Web3Provider","getSigner","getAddress","Contract","err","error","newAccount","params","toString","utils","formatEther"],"sources":["/Users/h-02/Desktop/app/whitelistDapp/client/src/App.js"],"sourcesContent":["import abi from \"./contract/xalts.json\";\n\nimport Footer from \"./components/Footer\";\n// import { Button, Paper, Stack, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import Card from \"react-bootstrap/Card\";\n// import ReactDOM from \"react-dom\";\nimport WhitelistBlacklist from \"./components/WhitelistBlacklist\";\nimport PurchaseToken from \"./components/PurchaseToken\";\n// import connectWallet from \"./components/connectWallet\";\nimport logo from \"./logo-main.png\";\n// import banner from \"./banner.jpeg\";\nimport \"./App.css\";\nimport PurchaseTokens from \"./components/PurchaseToken\";\n\nfunction App() {\n  const [state, setState] = useState({\n    provider: null,\n    signer: null,\n    contract: null,\n  });\n  const [account, setAccount] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [balance, setBalance] = useState(null);\n  // const [walletAddress, setwalletAddress] = useState(null);\n\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountChanged\", accountChanged);\n      window.ethereum.on(\"chainChanged\", chainChanged);\n    }\n    // getWalletAddresses();\n  }, []);\n\n  const connectWallet = async () => {\n    const contractAddress = \"0x09dcc35e2360f672D4E08C38cfE1A13A18Cf73C8\"; // XALTS Token Contract\n    const contractABI = abi.abi;\n    console.log(\"contractAddress\", contractAddress);\n    console.log(\"contractABI\", contractABI);\n    if (window.ethereum) {\n      try {\n        const res = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        await accountChanged(res[0]);\n\n        window.ethereum.on(\"chainChanged\", () => {\n          window.location.reload();\n        });\n\n        window.ethereum.on(\"accountsChanged\", () => {\n          window.location.reload();\n        });\n\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        console.log(await signer.getAddress());\n        const contract = new ethers.Contract(\n          contractAddress,\n          contractABI,\n          signer\n        );\n        //       setAccount(account);\n        setState({ provider, signer, contract });\n      } catch (err) {\n        console.error(err);\n        setErrorMessage(\"There was a problem connecting to MetaMask\");\n      }\n    } else {\n      setErrorMessage(\"Install MetaMask\");\n    }\n\n    // getWalletAddresses();\n  };\n\n  // const getWalletAddresses = async () => {\n  //   // event.preventDefault();\n  //   const { provider, signer, contract } = state;\n  //   const transaction = await contract.walletAddressList();\n  //   setwalletAddress(transaction[0]);\n  //   console.log(walletAddress);\n  //   console.log(\"Transaction is done\", transaction[0]);\n  // };\n\n  const accountChanged = async (newAccount) => {\n    setAccount(newAccount);\n    try {\n      const balance = await window.ethereum.request({\n        method: \"eth_getBalance\",\n        params: [newAccount.toString(), \"latest\"],\n      });\n      setBalance(ethers.utils.formatEther(balance));\n    } catch (err) {\n      console.error(err);\n      setErrorMessage(\"There was a problem connecting to MetaMask\");\n    }\n  };\n\n  const chainChanged = () => {\n    setErrorMessage(null);\n    setAccount(null);\n    setBalance(null);\n  };\n\n  return (\n    // <div style={{ backgroundColor: \"#EFEFEF\", height: \"100%\" }}>\n    //   <button className=\"block-button\" onClick={connectWallet}>\n    //     Connect Wallet\n    //   </button>\n    //   <h5 style={{ marginLeft: \"1020px\" }}>Account: {account}</h5>\n    //   <h5 style={{ marginLeft: \"1020px\" }}>Balance: {balance} ETH</h5>\n    //   <img\n    //     src={logo}\n    //     width=\"5%\"\n    //     height=\"5%\"\n    //     style={{ marginLeft: \"10px\", marginTop: \"10px \" }}\n    //   />\n    //   {/* <img src={banner} className=\"img-fluid\" alt=\"..\" width=\"100%\" /> */}\n    //   <div className=\"container\">\n    //     <WhitelistBlacklist state={state} />\n    //   </div>\n\n    //   <div className=\"container\">\n    //     <PurchaseTokens state={state} />\n    //   </div>\n\n      <Footer />\n    // </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}