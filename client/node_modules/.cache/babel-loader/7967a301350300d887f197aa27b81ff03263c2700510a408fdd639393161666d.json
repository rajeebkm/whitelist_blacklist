{"ast":null,"code":"var _jsxFileName = \"/Users/h-02/Desktop/app/whitelistDapp/client/src/components/WhitelistBlacklist.js\",\n  _s = $RefreshSig$();\nimport { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WhitelistBlacklist = _ref => {\n  _s();\n  let {\n    state\n  } = _ref;\n  const [inputValueWhitelist, setInputValueWhitelist] = useState(\"\");\n  const [inputValueBlacklist, setInputValueBlacklist] = useState(\"\");\n  const [processedArrayWhitelist, setProcessedArrayWhitelist] = useState([]);\n  const [processedArrayBlacklist, setProcessedArrayBlacklist] = useState([]);\n  const [walletStatus, setWalletStatus] = useState(null);\n  const handleInputChangeWhitelist = event => {\n    setInputValueWhitelist(event.target.value);\n  };\n  const processInputToArrayWhitelist = () => {\n    const newArray = inputValueWhitelist.split(\",\").map(item => item.trim());\n    setProcessedArrayWhitelist(newArray);\n  };\n  const handleInputChangeBlacklist = event => {\n    setInputValueBlacklist(event.target.value);\n  };\n  const processInputToArrayBlacklist = () => {\n    const newArray = inputValueBlacklist.split(\",\").map(item => item.trim());\n    setProcessedArrayBlacklist(newArray);\n  };\n  const whitelist = async event => {\n    event.preventDefault();\n    const {\n      provider,\n      signer,\n      contract\n    } = state;\n    // const amount = document.querySelector(\"#amountOfTokens\").value;\n    const addresses = processedArrayWhitelist;\n    const transaction = await contract.whitelist(addresses);\n    await transaction.wait();\n    console.log(transaction);\n    console.log(\"Transaction is done\", transaction);\n  };\n  const blacklist = async event => {\n    event.preventDefault();\n    const {\n      provider,\n      signer,\n      contract\n    } = state;\n    // const amount = document.querySelector(\"#amountOfTokens\").value;\n    const addresses = processedArrayBlacklist;\n    const transaction = await contract.blacklist(addresses);\n    await transaction.wait();\n    console.log(transaction);\n    console.log(\"Transaction is done\", transaction);\n  };\n  const checkWalletStatus = async event => {\n    event.preventDefault();\n    const {\n      provider,\n      signer,\n      contract\n    } = state;\n    const wallet = document.querySelector(\"#wallet\").value;\n    const isValidAddress = ethers.utils.isAddress(wallet);\n    const addresses = processedArrayBlacklist;\n    const transaction = await contract.blacklist(addresses);\n    await transaction.wait();\n    console.log(transaction);\n    console.log(\"Transaction is done\", transaction);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-md\",\n      style: {\n        width: \"50%\",\n        marginTop: \"25px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: whitelist,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Addresses to whitelist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputValueWhitelist,\n            onChange: handleInputChangeWhitelist,\n            className: \"form-control\",\n            id: \"amountOfTokens\",\n            placeholder: \"Enter Addresses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: processInputToArrayWhitelist,\n          type: \"submit\",\n          className: \"btn btn-success\",\n          disabled: !state.contract,\n          children: \"Whitelist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: blacklist,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Addresses to Blacklist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputValueBlacklist,\n            onChange: handleInputChangeBlacklist,\n            className: \"form-control\",\n            id: \"amountOfTokens\",\n            placeholder: \"Enter Addresses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: processInputToArrayWhitelist,\n          type: \"submit\",\n          className: \"btn btn-success\",\n          disabled: !state.contract,\n          children: \"Blacklist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(WhitelistBlacklist, \"vhcoGKhgWjvpr0q84lXJlt4XfNs=\");\n_c = WhitelistBlacklist;\nexport default WhitelistBlacklist;\nvar _c;\n$RefreshReg$(_c, \"WhitelistBlacklist\");","map":{"version":3,"names":["ethers","React","useEffect","useState","WhitelistBlacklist","state","inputValueWhitelist","setInputValueWhitelist","inputValueBlacklist","setInputValueBlacklist","processedArrayWhitelist","setProcessedArrayWhitelist","processedArrayBlacklist","setProcessedArrayBlacklist","walletStatus","setWalletStatus","handleInputChangeWhitelist","event","target","value","processInputToArrayWhitelist","newArray","split","map","item","trim","handleInputChangeBlacklist","processInputToArrayBlacklist","whitelist","preventDefault","provider","signer","contract","addresses","transaction","wait","console","log","blacklist","checkWalletStatus","wallet","document","querySelector","isValidAddress","utils","isAddress","width","marginTop"],"sources":["/Users/h-02/Desktop/app/whitelistDapp/client/src/components/WhitelistBlacklist.js"],"sourcesContent":["import { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nconst WhitelistBlacklist = ({ state }) => {\n  const [inputValueWhitelist, setInputValueWhitelist] = useState(\"\");\n  const [inputValueBlacklist, setInputValueBlacklist] = useState(\"\");\n  const [processedArrayWhitelist, setProcessedArrayWhitelist] = useState([]);\n  const [processedArrayBlacklist, setProcessedArrayBlacklist] = useState([]);\n  const [walletStatus, setWalletStatus] = useState(null);\n\n  const handleInputChangeWhitelist = (event) => {\n    setInputValueWhitelist(event.target.value);\n  };\n\n  const processInputToArrayWhitelist = () => {\n    const newArray = inputValueWhitelist.split(\",\").map((item) => item.trim());\n    setProcessedArrayWhitelist(newArray);\n  };\n\n  const handleInputChangeBlacklist = (event) => {\n    setInputValueBlacklist(event.target.value);\n  };\n\n  const processInputToArrayBlacklist = () => {\n    const newArray = inputValueBlacklist.split(\",\").map((item) => item.trim());\n    setProcessedArrayBlacklist(newArray);\n  };\n\n  const whitelist = async (event) => {\n    event.preventDefault();\n    const { provider, signer, contract } = state;\n    // const amount = document.querySelector(\"#amountOfTokens\").value;\n    const addresses = processedArrayWhitelist;\n    const transaction = await contract.whitelist(addresses);\n    await transaction.wait();\n    console.log(transaction);\n    console.log(\"Transaction is done\", transaction);\n  };\n\n  const blacklist = async (event) => {\n    event.preventDefault();\n    const { provider, signer, contract } = state;\n    // const amount = document.querySelector(\"#amountOfTokens\").value;\n    const addresses = processedArrayBlacklist;\n    const transaction = await contract.blacklist(addresses);\n    await transaction.wait();\n    console.log(transaction);\n    console.log(\"Transaction is done\", transaction);\n  };\n\n  const checkWalletStatus = async (event) => {\n    event.preventDefault();\n    const { provider, signer, contract } = state;\n    const wallet = document.querySelector(\"#wallet\").value;\n    const isValidAddress = ethers.utils.isAddress(wallet);\n    const addresses = processedArrayBlacklist;\n    const transaction = await contract.blacklist(addresses);\n    await transaction.wait();\n    console.log(transaction);\n    console.log(\"Transaction is done\", transaction);\n  };\n  return (\n    <>\n      <div className=\"container-md\" style={{ width: \"50%\", marginTop: \"25px\" }}>\n        <form onSubmit={whitelist}>\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Addresses to whitelist</label>\n            <input\n              type=\"text\"\n              value={inputValueWhitelist}\n              onChange={handleInputChangeWhitelist}\n              className=\"form-control\"\n              id=\"amountOfTokens\"\n              placeholder=\"Enter Addresses\"\n            />\n          </div>\n          <button\n            onClick={processInputToArrayWhitelist}\n            type=\"submit\"\n            className=\"btn btn-success\"\n            disabled={!state.contract}\n          >\n            Whitelist\n          </button>\n        </form>\n        <form onSubmit={blacklist}>\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Addresses to Blacklist</label>\n            <input\n              type=\"text\"\n              value={inputValueBlacklist}\n              onChange={handleInputChangeBlacklist}\n              className=\"form-control\"\n              id=\"amountOfTokens\"\n              placeholder=\"Enter Addresses\"\n            />\n          </div>\n          <button\n            onClick={processInputToArrayWhitelist}\n            type=\"submit\"\n            className=\"btn btn-success\"\n            disabled={!state.contract}\n          >\n            Blacklist\n          </button>\n        </form>\n      </div>\n      <p></p>\n    </>\n  );\n};\nexport default WhitelistBlacklist;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}