{"ast":null,"code":"var _jsxFileName = \"/Users/h-02/Desktop/app/whitelistDapp/client/src/App.js\",\n  _s = $RefreshSig$();\nimport abi from \"./contract/chai.json\";\nimport { Button, Paper, Stack, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport Buy from \"./components/Buy\";\n// import { Button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Card from \"react-bootstrap/Card\";\nimport ReactDOM from \"react-dom\";\n// import Memos from \"./components/Memos\";\nimport Whitelist from \"./components/Whitelist\";\nimport Blacklist from \"./components/Blacklist\";\nimport PurchaseToken from \"./components/PurchaseToken\";\n// import MetaConnect from \"./components/connectWallet\";\n// import chai from \"./chai.png\";\nimport banner from \"./banner.jpeg\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [balance, setBalance] = useState(null);\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", accountsChanged);\n      window.ethereum.on(\"chainChanged\", chainChanged);\n    }\n  }, []);\n  const connectHandler = async () => {\n    if (window.ethereum) {\n      try {\n        const res = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        await accountsChanged(res[0]);\n      } catch (err) {\n        console.error(err);\n        setErrorMessage(\"There was a problem connecting to MetaMask\");\n      }\n    } else {\n      setErrorMessage(\"Install MetaMask\");\n    }\n  };\n  const accountsChanged = async newAccount => {\n    setAccount(newAccount);\n    try {\n      const balance = await window.ethereum.request({\n        method: \"eth_getBalance\",\n        params: [newAccount.toString(), \"latest\"]\n      });\n      setBalance(ethers.utils.formatEther(balance));\n    } catch (err) {\n      console.error(err);\n      setErrorMessage(\"There was a problem connecting to MetaMask\");\n    }\n  };\n  const chainChanged = () => {\n    setErrorMessage(null);\n    setAccount(null);\n    setBalance(null);\n  };\n  // const [state, setState] = useState({\n  //   provider: null,\n  //   signer: null,\n  //   contract: null,\n  // });\n  // const [account, setAccount] = useState(\"None\");\n  // useEffect(() => {\n  // const connectWallet = async () => {\n  //   const contractAddress = \"0x46436dcb1b29b111a00bb61f5475b420ef1104eb\";\n  //   const contractABI = abi.abi;\n  //   try {\n  //     const { ethereum } = window;\n\n  //     if (ethereum) {\n  //       const account = await ethereum.request({\n  //         method: \"eth_requestAccounts\",\n  //       });\n\n  //       window.ethereum.on(\"chainChanged\", () => {\n  //         window.location.reload();\n  //       });\n\n  //       window.ethereum.on(\"accountsChanged\", () => {\n  //         window.location.reload();\n  //       });\n\n  //       const provider = new ethers.providers.Web3Provider(ethereum);\n  //       const signer = provider.getSigner();\n  //       const contract = new ethers.Contract(\n  //         contractAddress,\n  //         contractABI,\n  //         signer\n  //       );\n  //       setAccount(account);\n  //       setState({ provider, signer, contract });\n  //     } else {\n  //       alert(\"Please install metamask\");\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // };\n  // connectWallet();\n  // }, []);\n  // console.log(state);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      p: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\" Account: \", account, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\"Balance: \", balance, \" \", balance ? \"ETH\" : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: connectHandler,\n        children: \"Connect Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), errorMessage ? /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"red\",\n        children: [\"Error: \", errorMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 7\n  }, this)\n  // <div style={{ backgroundColor: \"#EFEFEF\", height: \"100%\" }}>\n  //   <div className=\"container\" style={{ marginTop: \"45px\" }}>\n  //     <MetaConnect state={state} />\n  //   </div>\n  //   <img src={banner} className=\"img-fluid\" alt=\"..\" width=\"100%\" />\n  //   <p\n  //     class=\"text-muted lead \"\n  //     style={{ marginTop: \"10px\", marginLeft: \"5px\" }}\n  //   >\n  //     <small>Connected Account - {account}</small>\n  //   </p>\n  //   <div className=\"container\">\n  //     <Whitelist state={state} />\n  //   </div>\n  //   <div className=\"container\" style={{ marginTop: \"45px\" }}>\n  //     <Blacklist state={state} />\n  //   </div>\n  // </div>\n  ;\n}\n_s(App, \"mdDOIZQG7y5xfFvyzD60oHnbYrA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["abi","Button","Paper","Stack","Typography","React","useEffect","useState","ethers","Buy","Card","ReactDOM","Whitelist","Blacklist","PurchaseToken","banner","App","errorMessage","setErrorMessage","account","setAccount","balance","setBalance","window","ethereum","on","accountsChanged","chainChanged","connectHandler","res","request","method","err","console","error","newAccount","params","toString","utils","formatEther","p"],"sources":["/Users/h-02/Desktop/app/whitelistDapp/client/src/App.js"],"sourcesContent":["import abi from \"./contract/chai.json\";\nimport { Button, Paper, Stack, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport Buy from \"./components/Buy\";\n// import { Button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Card from \"react-bootstrap/Card\";\nimport ReactDOM from \"react-dom\";\n// import Memos from \"./components/Memos\";\nimport Whitelist from \"./components/Whitelist\";\nimport Blacklist from \"./components/Blacklist\";\nimport PurchaseToken from \"./components/PurchaseToken\";\n// import MetaConnect from \"./components/connectWallet\";\n// import chai from \"./chai.png\";\nimport banner from \"./banner.jpeg\";\nimport \"./App.css\";\n\nfunction App() {\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [balance, setBalance] = useState(null);\n\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", accountsChanged);\n      window.ethereum.on(\"chainChanged\", chainChanged);\n    }\n  }, []);\n\n  const connectHandler = async () => {\n    if (window.ethereum) {\n      try {\n        const res = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        await accountsChanged(res[0]);\n      } catch (err) {\n        console.error(err);\n        setErrorMessage(\"There was a problem connecting to MetaMask\");\n      }\n    } else {\n      setErrorMessage(\"Install MetaMask\");\n    }\n  };\n\n  const accountsChanged = async (newAccount) => {\n    setAccount(newAccount);\n    try {\n      const balance = await window.ethereum.request({\n        method: \"eth_getBalance\",\n        params: [newAccount.toString(), \"latest\"],\n      });\n      setBalance(ethers.utils.formatEther(balance));\n    } catch (err) {\n      console.error(err);\n      setErrorMessage(\"There was a problem connecting to MetaMask\");\n    }\n  };\n\n  const chainChanged = () => {\n    setErrorMessage(null);\n    setAccount(null);\n    setBalance(null);\n  };\n  // const [state, setState] = useState({\n  //   provider: null,\n  //   signer: null,\n  //   contract: null,\n  // });\n  // const [account, setAccount] = useState(\"None\");\n  // useEffect(() => {\n  // const connectWallet = async () => {\n  //   const contractAddress = \"0x46436dcb1b29b111a00bb61f5475b420ef1104eb\";\n  //   const contractABI = abi.abi;\n  //   try {\n  //     const { ethereum } = window;\n\n  //     if (ethereum) {\n  //       const account = await ethereum.request({\n  //         method: \"eth_requestAccounts\",\n  //       });\n\n  //       window.ethereum.on(\"chainChanged\", () => {\n  //         window.location.reload();\n  //       });\n\n  //       window.ethereum.on(\"accountsChanged\", () => {\n  //         window.location.reload();\n  //       });\n\n  //       const provider = new ethers.providers.Web3Provider(ethereum);\n  //       const signer = provider.getSigner();\n  //       const contract = new ethers.Contract(\n  //         contractAddress,\n  //         contractABI,\n  //         signer\n  //       );\n  //       setAccount(account);\n  //       setState({ provider, signer, contract });\n  //     } else {\n  //       alert(\"Please install metamask\");\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // };\n  // connectWallet();\n  // }, []);\n  // console.log(state);\n  return (\n      <Paper elevation={3} sx={{ p: 3 }}>\n      <Stack spacing={2}>\n        <Typography variant=\"h6\"> Account: {account} </Typography>\n        <Typography variant=\"h6\">\n          Balance: {balance} {balance ? \"ETH\" : null}\n        </Typography>\n        <Button onClick={connectHandler}>Connect Account</Button>\n        {errorMessage ? (\n          <Typography variant=\"body1\" color=\"red\">\n            Error: {errorMessage}\n          </Typography>\n        ) : null}\n      </Stack>\n    </Paper>\n    // <div style={{ backgroundColor: \"#EFEFEF\", height: \"100%\" }}>\n    //   <div className=\"container\" style={{ marginTop: \"45px\" }}>\n    //     <MetaConnect state={state} />\n    //   </div>\n    //   <img src={banner} className=\"img-fluid\" alt=\"..\" width=\"100%\" />\n    //   <p\n    //     class=\"text-muted lead \"\n    //     style={{ marginTop: \"10px\", marginLeft: \"5px\" }}\n    //   >\n    //     <small>Connected Account - {account}</small>\n    //   </p>\n    //   <div className=\"container\">\n    //     <Whitelist state={state} />\n    //   </div>\n    //   <div className=\"container\" style={{ marginTop: \"45px\" }}>\n    //     <Blacklist state={state} />\n    //   </div>\n    // </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}