{"ast":null,"code":"var _jsxFileName = \"/Users/h-02/Desktop/app/whitelistDapp/client/src/App.js\",\n  _s = $RefreshSig$();\nimport abi from \"./contract/xalts.json\";\n// import { Button, Paper, Stack, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import Card from \"react-bootstrap/Card\";\n// import ReactDOM from \"react-dom\";\nimport WhitelistBlacklist from \"./components/WhitelistBlacklist\";\n// import PurchaseToken from \"./components/PurchaseToken\";\n// import connectWallet from \"./components/connectWallet\";\nimport logo from \"./logo-main.png\";\n// import banner from \"./banner.jpeg\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [state, setState] = useState({\n    provider: null,\n    signer: null,\n    contract: null\n  });\n  const [account, setAccount] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [balance, setBalance] = useState(null);\n  const [walletAddress, setwalletAddress] = useState(null);\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountChanged\", accountChanged);\n      window.ethereum.on(\"chainChanged\", chainChanged);\n    }\n    getWalletAddresses();\n  }, []);\n  const connectWallet = async () => {\n    const contractAddress = \"0x09dcc35e2360f672D4E08C38cfE1A13A18Cf73C8\"; // XALTS Token Contract\n    const contractABI = abi.abi;\n    console.log(\"contractAddress\", contractAddress);\n    console.log(\"contractABI\", contractABI);\n    if (window.ethereum) {\n      try {\n        const res = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        await accountChanged(res[0]);\n        window.ethereum.on(\"chainChanged\", () => {\n          window.location.reload();\n        });\n        window.ethereum.on(\"accountsChanged\", () => {\n          window.location.reload();\n        });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        console.log(await signer.getAddress());\n        const contract = new ethers.Contract(contractAddress, contractABI, signer);\n        //       setAccount(account);\n        setState({\n          provider,\n          signer,\n          contract\n        });\n      } catch (err) {\n        console.error(err);\n        setErrorMessage(\"There was a problem connecting to MetaMask\");\n      }\n    } else {\n      setErrorMessage(\"Install MetaMask\");\n    }\n  };\n  const getWalletAddresses = async event => {\n    event.preventDefault();\n    const {\n      provider,\n      signer,\n      contract\n    } = state;\n    console.log(\"Signer: \", await signer.getAddress());\n    const transaction = await contract.walletAddressList();\n    setwalletAddress(transaction[0]);\n    console.log(walletAddress);\n    console.log(\"Transaction is done\", transaction[0]);\n  };\n  const accountChanged = async newAccount => {\n    setAccount(newAccount);\n    try {\n      const balance = await window.ethereum.request({\n        method: \"eth_getBalance\",\n        params: [newAccount.toString(), \"latest\"]\n      });\n      setBalance(ethers.utils.formatEther(balance));\n    } catch (err) {\n      console.error(err);\n      setErrorMessage(\"There was a problem connecting to MetaMask\");\n    }\n  };\n  const chainChanged = () => {\n    setErrorMessage(null);\n    setAccount(null);\n    setBalance(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#EFEFEF\",\n      height: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"block-button\",\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      style: {\n        marginLeft: \"1020px\"\n      },\n      children: [\"Account: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      style: {\n        marginLeft: \"1020px\"\n      },\n      children: [\"Balance: \", balance, \" ETH\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      width: \"5%\",\n      height: \"5%\",\n      style: {\n        marginLeft: \"10px\",\n        marginTop: \"10px \"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(WhitelistBlacklist, {\n        state: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginLeft: \"293px\",\n        marginTop: \"30px\"\n      },\n      onClick: getWalletAddresses,\n      children: \"Get All Wallets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"elhxw37/CGUYg+wNaXErC/5Gzo4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["abi","React","useEffect","useState","ethers","WhitelistBlacklist","logo","App","state","setState","provider","signer","contract","account","setAccount","errorMessage","setErrorMessage","balance","setBalance","walletAddress","setwalletAddress","window","ethereum","on","accountChanged","chainChanged","getWalletAddresses","connectWallet","contractAddress","contractABI","console","log","res","request","method","location","reload","providers","Web3Provider","getSigner","getAddress","Contract","err","error","event","preventDefault","transaction","walletAddressList","newAccount","params","toString","utils","formatEther","backgroundColor","height","marginLeft","marginTop"],"sources":["/Users/h-02/Desktop/app/whitelistDapp/client/src/App.js"],"sourcesContent":["import abi from \"./contract/xalts.json\";\n// import { Button, Paper, Stack, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import Card from \"react-bootstrap/Card\";\n// import ReactDOM from \"react-dom\";\nimport WhitelistBlacklist from \"./components/WhitelistBlacklist\";\n// import PurchaseToken from \"./components/PurchaseToken\";\n// import connectWallet from \"./components/connectWallet\";\nimport logo from \"./logo-main.png\";\n// import banner from \"./banner.jpeg\";\nimport \"./App.css\";\n\nfunction App() {\n  const [state, setState] = useState({\n    provider: null,\n    signer: null,\n    contract: null,\n  });\n  const [account, setAccount] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [balance, setBalance] = useState(null);\n  const [walletAddress, setwalletAddress] = useState(null);\n\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountChanged\", accountChanged);\n      window.ethereum.on(\"chainChanged\", chainChanged);\n    }\n    getWalletAddresses();\n  }, []);\n\n  const connectWallet = async () => {\n    const contractAddress = \"0x09dcc35e2360f672D4E08C38cfE1A13A18Cf73C8\"; // XALTS Token Contract\n    const contractABI = abi.abi;\n    console.log(\"contractAddress\", contractAddress);\n    console.log(\"contractABI\", contractABI);\n    if (window.ethereum) {\n      try {\n        const res = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        await accountChanged(res[0]);\n\n        window.ethereum.on(\"chainChanged\", () => {\n          window.location.reload();\n        });\n\n        window.ethereum.on(\"accountsChanged\", () => {\n          window.location.reload();\n        });\n\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        console.log(await signer.getAddress());\n        const contract = new ethers.Contract(\n          contractAddress,\n          contractABI,\n          signer\n        );\n        //       setAccount(account);\n        setState({ provider, signer, contract });\n      } catch (err) {\n        console.error(err);\n        setErrorMessage(\"There was a problem connecting to MetaMask\");\n      }\n    } else {\n      setErrorMessage(\"Install MetaMask\");\n    }\n  };\n\n    const getWalletAddresses = async (event) => {\n      event.preventDefault();\n      const { provider, signer, contract } = state;\n      console.log(\"Signer: \", await signer.getAddress());\n      const transaction = await contract.walletAddressList();\n      setwalletAddress(transaction[0]);\n      console.log(walletAddress);\n      console.log(\"Transaction is done\", transaction[0]);\n    };\n\n  const accountChanged = async (newAccount) => {\n    setAccount(newAccount);\n    try {\n      const balance = await window.ethereum.request({\n        method: \"eth_getBalance\",\n        params: [newAccount.toString(), \"latest\"],\n      });\n      setBalance(ethers.utils.formatEther(balance));\n    } catch (err) {\n      console.error(err);\n      setErrorMessage(\"There was a problem connecting to MetaMask\");\n    }\n  };\n\n  const chainChanged = () => {\n    setErrorMessage(null);\n    setAccount(null);\n    setBalance(null);\n  };\n\n  return (\n    <div style={{ backgroundColor: \"#EFEFEF\", height: \"100%\" }}>\n      <button className=\"block-button\" onClick={connectWallet}>\n        Connect Wallet\n      </button>\n      <h5 style={{ marginLeft: \"1020px\" }}>Account: {account}</h5>\n      <h5 style={{ marginLeft: \"1020px\" }}>Balance: {balance} ETH</h5>\n      <img\n        src={logo}\n        width=\"5%\"\n        height=\"5%\"\n        style={{ marginLeft: \"10px\", marginTop: \"10px \" }}\n      />\n      {/* <img src={banner} className=\"img-fluid\" alt=\"..\" width=\"100%\" /> */}\n      <div className=\"container\">\n        <WhitelistBlacklist state={state} />\n      </div>\n      <button\n        style={{ marginLeft: \"293px\", marginTop: \"30px\" }}\n        onClick={getWalletAddresses}\n      >\n        Get All Wallets\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}