[{"/Users/h-02/Desktop/app/whitelistDapp/client/src/index.js":"1","/Users/h-02/Desktop/app/whitelistDapp/client/src/reportWebVitals.js":"2","/Users/h-02/Desktop/app/whitelistDapp/client/src/App.js":"3","/Users/h-02/Desktop/app/whitelistDapp/client/src/components/purchaseTokens.js":"4","/Users/h-02/Desktop/app/whitelistDapp/client/src/components/WhitelistBlacklist.js":"5","/Users/h-02/Desktop/app/whitelistDapp/client/src/components/Header.js":"6","/Users/h-02/Desktop/app/whitelistDapp/client/src/components/Footer.js":"7","/Users/h-02/Desktop/app/whitelistDapp/client/src/components/Interactions.js":"8"},{"size":535,"mtime":1691875303614,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1691875303614,"results":"11","hashOfConfig":"10"},{"size":4816,"mtime":1691930898999,"results":"12","hashOfConfig":"10"},{"size":1994,"mtime":1691930523820,"results":"13","hashOfConfig":"10"},{"size":5062,"mtime":1691930405386,"results":"14","hashOfConfig":"10"},{"size":670,"mtime":1691930985732,"results":"15","hashOfConfig":"10"},{"size":261,"mtime":1691930542202,"results":"16","hashOfConfig":"10"},{"size":2588,"mtime":1691930513103,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1808xu7",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"31"},"/Users/h-02/Desktop/app/whitelistDapp/client/src/index.js",[],[],"/Users/h-02/Desktop/app/whitelistDapp/client/src/reportWebVitals.js",[],[],"/Users/h-02/Desktop/app/whitelistDapp/client/src/App.js",["45","46"],[],"/Users/h-02/Desktop/app/whitelistDapp/client/src/components/purchaseTokens.js",["47"],[],"import { ethers } from \"ethers\";\nconst PurchaseTokens = ({ state }) => {\n  const purchaseTokens = async (event) => {\n    event.preventDefault();\n    const { provider, signer, contract } = state;\n    const amount = document.querySelector(\"#amountOfTokens\").value;\n    console.log(\"Requested amount:\", amount);\n    const balanceOfTokensBefore = await contract.balanceOf(\n      await signer.getAddress()\n    );\n    console.log(\n      `Token balance of user ${await signer.getAddress()} before purchase is ${balanceOfTokensBefore}`\n    );\n    const amountOfTokens = ethers.utils.parseEther(amount);\n    console.log(\"Parsed amount:\", parseInt(amountOfTokens));\n    const price = ethers.utils.parseEther(\"0.0001\");\n    const valueToSend = amount * price;\n    const transaction = await contract.purchaseTokens(amountOfTokens, {\n      value: valueToSend,\n    });\n    await transaction.wait();\n    console.log(transaction);\n    console.log(\"Transaction is done\", transaction);\n    const balanceOfTokens = await contract.balanceOf(await signer.getAddress());\n    console.log(\n      `Token balance of user ${await signer.getAddress()} after purchase is ${balanceOfTokens}`\n    );\n  };\n  return (\n    <>\n      <div className=\"container-md\" style={{ width: \"40%\", marginTop: \"-510px\", marginRight: \"50px\"}}>\n        <form onSubmit={purchaseTokens}>\n          <div className=\"mb-3\">\n            <label className=\"form-label\">\n              Enter amount of tokens. Price (1 XLTS = 0.0001\n              ETH = ~ $ 0.18)\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"amountOfTokens\"\n              placeholder=\"Enter amount\"\n            />\n          </div>\n          <button\n            type=\"submit\"\n            className=\"btn btn-success\"\n            disabled={!state.contract}\n          >\n            Purchase XALTS Token\n          </button>\n        </form>\n      </div>\n      <p></p>\n    </>\n  );\n};\n\nexport default PurchaseTokens;\n",[],"/Users/h-02/Desktop/app/whitelistDapp/client/src/components/WhitelistBlacklist.js",["48","49","50","51","52","53","54"],[],"/Users/h-02/Desktop/app/whitelistDapp/client/src/components/Header.js",["55","56"],[],"/Users/h-02/Desktop/app/whitelistDapp/client/src/components/Footer.js",[],[],"/Users/h-02/Desktop/app/whitelistDapp/client/src/components/Interactions.js",["57","58","59","60"],[],"import { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport logo from \"../transfer.avif\";\n\nconst Interactions = ({ state }) => {\n  const [inputValue, setInputValue] = useState(null);\n  const [processedArray, setProcessedArray] = useState([]);\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const processInputToArray = () => {\n    const newArray = inputValue.split(\",\").map((item) => item.trim());\n    setProcessedArray(newArray);\n  };\n\n  const interactions = async (event) => {\n    event.preventDefault();\n    const { provider, signer, contract } = state;\n    const wallet = processedArray;\n    const amount = document.querySelector(\"#amount\").value;\n    console.log(\"wallet:\", wallet[0], \"amount:\", amount);\n    const parsedAmount = ethers.utils.parseEther(amount);\n    console.log(\"parsedAmount:\", parsedAmount);\n    const transaction = await contract.transfer(wallet[0], parsedAmount);\n    await transaction.wait();\n    console.log(transaction);\n    console.log(\"Transaction is done\", transaction);\n  };\n\n  return (\n    <>\n      <div\n        className=\"container-md\"\n        style={{\n          width: \"40%\",\n          marginTop: \"120px\",\n          marginRight: \"50px\",\n          marginBottom: \"63px\",\n        }}\n      >\n        <img\n          src={logo}\n          width=\"15%\"\n          height=\"30%\"\n          style={{\n            marginLeft: \"370px\",\n            marginTop: \"-57px\",\n            marginBottom: \"0px\",\n          }}\n        />\n        <form onSubmit={interactions}>\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Wallet address to transfer</label>\n            <input\n              type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n              className=\"form-control\"\n              id=\"wallet\"\n              placeholder=\"Enter wallet addresses to transfer\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Amount of XALTS tokens</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"amount\"\n              placeholder=\"Enter amount of XALTS tokens to transfer\"\n            />\n          </div>\n          <button\n            onClick={processInputToArray}\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            disabled={!state.contract}\n          >\n            Interactions (Transfer XALTS Tokens)\n          </button>\n        </form>\n      </div>\n    </>\n  );\n};\nexport default Interactions;\n",{"ruleId":"61","severity":1,"message":"62","line":6,"column":8,"nodeType":"63","messageId":"64","endLine":6,"endColumn":12},{"ruleId":"61","severity":1,"message":"65","line":15,"column":10,"nodeType":"63","messageId":"64","endLine":15,"endColumn":22},{"ruleId":"61","severity":1,"message":"66","line":5,"column":13,"nodeType":"63","messageId":"64","endLine":5,"endColumn":21},{"ruleId":"61","severity":1,"message":"67","line":2,"column":17,"nodeType":"63","messageId":"64","endLine":2,"endColumn":26},{"ruleId":"61","severity":1,"message":"66","line":32,"column":13,"nodeType":"63","messageId":"64","endLine":32,"endColumn":21},{"ruleId":"61","severity":1,"message":"68","line":32,"column":23,"nodeType":"63","messageId":"64","endLine":32,"endColumn":29},{"ruleId":"61","severity":1,"message":"66","line":42,"column":13,"nodeType":"63","messageId":"64","endLine":42,"endColumn":21},{"ruleId":"61","severity":1,"message":"68","line":42,"column":23,"nodeType":"63","messageId":"64","endLine":42,"endColumn":29},{"ruleId":"61","severity":1,"message":"66","line":52,"column":13,"nodeType":"63","messageId":"64","endLine":52,"endColumn":21},{"ruleId":"61","severity":1,"message":"68","line":52,"column":23,"nodeType":"63","messageId":"64","endLine":52,"endColumn":29},{"ruleId":"69","severity":1,"message":"70","line":9,"column":7,"nodeType":"71","endLine":9,"endColumn":11},{"ruleId":"72","severity":1,"message":"73","line":10,"column":7,"nodeType":"71","endLine":15,"endColumn":9},{"ruleId":"61","severity":1,"message":"67","line":2,"column":17,"nodeType":"63","messageId":"64","endLine":2,"endColumn":26},{"ruleId":"61","severity":1,"message":"66","line":20,"column":13,"nodeType":"63","messageId":"64","endLine":20,"endColumn":21},{"ruleId":"61","severity":1,"message":"68","line":20,"column":23,"nodeType":"63","messageId":"64","endLine":20,"endColumn":29},{"ruleId":"72","severity":1,"message":"73","line":43,"column":9,"nodeType":"71","endLine":52,"endColumn":11},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'errorMessage' is assigned a value but never used.","'provider' is assigned a value but never used.","'useEffect' is defined but never used.","'signer' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]